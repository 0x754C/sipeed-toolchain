diff --git a/.gitignore b/.gitignore
index a0b89073..cd978a6d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -98,7 +98,6 @@ __pycache__
 
 # cvitek auto-generated files
 /include/cvitek/cvitek.h
-/include/cvipart.h
 /include/imgs.h
 /include/cvi_board_memmap.h
 tags
diff --git a/arch/riscv/dts/.gitignore b/arch/riscv/dts/.gitignore
deleted file mode 100644
index 6ad73ec5..00000000
--- a/arch/riscv/dts/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*.dts
-*.dtsi
\ No newline at end of file
diff --git a/arch/riscv/dts/Makefile b/arch/riscv/dts/Makefile
index 9d02c4f0..53c3fbc4 100644
--- a/arch/riscv/dts/Makefile
+++ b/arch/riscv/dts/Makefile
@@ -8,7 +8,7 @@ dtb-$(CONFIG_TARGET_SIFIVE_UNLEASHED) += hifive-unleashed-a00.dtb
 dtb-$(CONFIG_TARGET_SIFIVE_UNMATCHED) += hifive-unmatched-a00.dtb
 dtb-$(CONFIG_TARGET_SIPEED_MAIX) += k210-maix-bit.dtb
 
-dtb-$(CONFIG_TARGET_CVITEK) += $(CHIP)_$(CVIBOARD).dtb
+dtb-$(CONFIG_TARGET_CVITEK) += licheervnano.dtb
 
 targets += $(dtb-y)
 
diff --git a/arch/riscv/dts/licheervnano.dts b/arch/riscv/dts/licheervnano.dts
new file mode 100644
index 00000000..33012c56
--- /dev/null
+++ b/arch/riscv/dts/licheervnano.dts
@@ -0,0 +1,168 @@
+/dts-v1/;
+#include "soph_base_riscv.dtsi"
+#include "soph_asic_qfn.dtsi"
+#include "soph_asic_sd.dtsi"
+#include "soph_default_memmap.dtsi"
+
+#include <dt-bindings/input/linux-event-codes.h>
+#include <dt-bindings/gpio/gpio.h>
+
+&i2c0 {
+        status = "disabled";
+        /delete-property/ scl-pinmux;
+        /delete-property/ sda-pinmux;
+        /delete-property/ scl-gpios;
+        /delete-property/ sda-gpios;
+};
+
+&i2c1 {
+        status = "disabled";
+        /delete-property/ scl-pinmux;
+        /delete-property/ sda-pinmux;
+        /delete-property/ scl-gpios;
+        /delete-property/ sda-gpios;
+};
+
+&sd {
+        min-frequency = <400000>; // 400Khz
+        //max-frequency = <50000000>; // 50Mhz
+        max-frequency = <25000000>; // 25Mhz
+        //max-frequency = <10000000>; // 10Mhz
+        //max-frequency = <5000000>; // 5Mhz
+};
+
+&cvi_vo {
+#ifndef __UBOOT__
+	/delete-property/ reset-gpio;
+#else
+	// for uboot
+        reset-gpio = <&porte 0 1>;
+#endif
+        /delete-property/ pwm-gpio;
+        /delete-property/ power-ct-gpio;
+
+};
+
+&mipi_tx {
+        /delete-property/ pwm-gpio;
+#ifndef __UBOOT__
+	// for linux kernel
+        reset-gpio = <&porte 0 1>;
+#else
+        /delete-property/ reset-gpio;
+#endif
+        /delete-property/ power-ct-gpio;
+        status = "okay";
+};
+
+&uart1 {
+        status = "okay";
+};
+
+&pwm0 {
+        status = "okay";
+};
+
+&pwm1 {
+      status = "okay";
+};
+
+&pwm2 {
+      status = "okay";
+};
+
+&i2c2 {
+        status = "disabled";
+        /delete-property/ scl-pinmux;
+        /delete-property/ sda-pinmux;
+        /delete-property/ scl-gpios;
+        /delete-property/ sda-gpios;
+};
+
+&i2c3 {
+        status = "disabled";
+        /delete-property/ scl-pinmux;
+        /delete-property/ sda-pinmux;
+        /delete-property/ scl-gpios;
+        /delete-property/ sda-gpios;
+};
+
+&i2c4 {
+        statuc = "okay";
+        gt9xx: gt9xx@14 {
+                compatible = "goodix,gt9xx";
+                reg = <0x14>;
+                goodix,irq-gpio = <&porte 3 0>;
+                goodix,rst-gpio = <&porte 4 0>;
+                status = "okay";
+        };
+	hytr: hynitron@5a {
+		compatible = "hynitron,hyn_ts";
+		reg = <0x5a>;
+		hynitron,irq-gpio = <&porte 3 0>;
+		hynitron,reset-gpio = <&porte 4 0>;
+		hynitron,max-touch-number = <5>;
+		hynitron,display-coords = <368 552>;
+                status = "okay";
+	};
+};
+
+&dac {
+        status = "okay";
+        /delete-property/ mute-gpio-r;
+};
+
+&fb_reserved {
+        status = "okay";
+};
+
+&cvi_fb {
+        status = "okay";
+};
+
+&mipi_rx {
+        snsr-reset = <&porte 1 GPIO_ACTIVE_LOW>;
+};
+
+/ {
+        model = "LicheeRv Nano";
+
+        gpio-keys {
+                compatible = "gpio-keys";
+                key-user {
+                        label = "User Key";
+                        linux,code = <KEY_DISPLAYTOGGLE>;
+                        debounce-interval = <1>;
+                        gpios = <&porta 30 1>;
+                };
+        };
+
+        wifisd:wifi-sd@4320000 {
+                compatible = "cvitek,cv181x-sdio";
+                bus-width = <4>;
+                reg = <0x0 0x4320000 0x0 0x1000>;
+                reg_names = "core_mem";
+                src-frequency = <375000000>;
+                min-frequency = <400000>; // 400Khz
+                //max-frequency = <50000000>; // 50Mhz
+                //max-frequency = <45000000>; // 45Mhz
+                //max-frequency = <40000000>; // 40Mhz
+                //max-frequency = <35000000>; // 35Mhz
+                //max-frequency = <30000000>; // 30Mhz
+                max-frequency = <25000000>; // 25Mhz
+                //max-frequency = <20000000>; // 20Mhz
+                //max-frequency = <15000000>; // 15Mhz
+                //max-frequency = <10000000>; // 10Mhz
+                //max-frequency = <5000000>; // 5Mhz
+                64_addressing;
+                reset_tx_rx_phy;
+                non-removable;
+                pll_index = <0x7>;
+                pll_reg = <0x300207C>;
+                no-mmc;
+                no-sd;
+                status = "okay";
+                interrupts = <38 IRQ_TYPE_LEVEL_HIGH>;
+                interrupt-parent = <&plic0>;
+        };
+};
diff --git a/arch/riscv/dts/soph_asic_bga.dtsi b/arch/riscv/dts/soph_asic_bga.dtsi
new file mode 100644
index 00000000..f5487293
--- /dev/null
+++ b/arch/riscv/dts/soph_asic_bga.dtsi
@@ -0,0 +1,16 @@
+&dac{
+	mute-gpio-l = <&porta 15 GPIO_ACTIVE_LOW>;
+	mute-gpio-r = <&porta 30 GPIO_ACTIVE_LOW>;
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+/ {
+	/delete-node/ i2s@04110000;
+	/delete-node/ i2s@04120000;
+	/delete-node/ sound_ext1;
+	/delete-node/ sound_ext2;
+	/delete-node/ sound_PDM;
+};
diff --git a/arch/riscv/dts/soph_asic_emmc.dtsi b/arch/riscv/dts/soph_asic_emmc.dtsi
new file mode 100644
index 00000000..507a3a46
--- /dev/null
+++ b/arch/riscv/dts/soph_asic_emmc.dtsi
@@ -0,0 +1,4 @@
+/ {
+	/delete-node/ cvi-spif@10000000;
+	/delete-node/ cv-spinf@4060000;
+};
diff --git a/arch/riscv/dts/soph_asic_qfn.dtsi b/arch/riscv/dts/soph_asic_qfn.dtsi
new file mode 100644
index 00000000..5bb417dc
--- /dev/null
+++ b/arch/riscv/dts/soph_asic_qfn.dtsi
@@ -0,0 +1,118 @@
+&sd {
+	no-1-8-v;
+};
+
+&mipi_rx{
+	snsr-reset = <&portc 13 GPIO_ACTIVE_LOW>, <&portc 13 GPIO_ACTIVE_LOW>, <&portc 13 GPIO_ACTIVE_LOW>;
+};
+
+&mipi_tx {
+	reset-gpio = <&porta 15 GPIO_ACTIVE_LOW>;
+	pwm-gpio = <&porta 18 GPIO_ACTIVE_HIGH>;
+	power-ct-gpio = <&porta 19 GPIO_ACTIVE_HIGH>;
+};
+
+&dac{
+	mute-gpio-r = <&porte 2 GPIO_ACTIVE_LOW>;
+};
+
+&spi0 {
+	status = "disabled";
+	num-cs = <1>;
+	spidev@0 {
+		compatible = "rohm,dh2228fv";
+		spi-max-frequency = <1000000>;
+		reg = <0>;
+	};
+};
+
+&spi1 {
+	status = "disabled";
+	num-cs = <1>;
+	spidev@0 {
+		compatible = "rohm,dh2228fv";
+		spi-max-frequency = <1000000>;
+		reg = <0>;
+	};
+};
+
+&spi2 {
+	status = "disabled";
+	num-cs = <1>;
+	spidev@0 {
+	compatible = "rohm,dh2228fv";
+		spi-max-frequency = <1000000>;
+		reg = <0>;
+	};
+};
+
+&spi3 {
+	status = "okay";
+	num-cs = <1>;
+	spidev@0 {
+		compatible = "rohm,dh2228fv";
+		spi-max-frequency = <1000000>;
+		reg = <0>;
+	};
+};
+
+&i2c0 {
+	/* FMUX_GPIO_REG iic_func_sel gpio_func_sel */
+	scl-pinmux = <0x03001070 0x0 0x3>;	// IIC0_SCL/IIC0_SCL/XGPIOA[28]
+	sda-pinmux = <0x03001074 0x0 0x3>;	// IIC0_SDA/IIC0_SDA/XGPIOA[29]
+	/* gpio port */
+	scl-gpios = <&porta 28 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&porta 29 GPIO_ACTIVE_HIGH>;
+};
+
+&i2c1 {
+	/* FMUX_GPIO_REG iic_func_sel gpio_func_sel */
+	scl-pinmux = <0x03009408 0x2 0x3>;	// SPI1_MOSI/IIC1_SCL/XGPIOB[7]
+	sda-pinmux = <0x0300940c 0x2 0x3>;	// SPI1_MISO/IIC1_SDA/XGPIOB[8]
+	/* gpio port */
+	scl-gpios = <&portb 7 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&portb 8 GPIO_ACTIVE_HIGH>;
+};
+
+&i2c2 {
+	/* FMUX_GPIO_REG iic_func_sel gpio_func_sel */
+	scl-pinmux = <0x030011a0 0x4 0x3>;	// PAD_MIPI_TXP1/IIC2_SCL/XGPIOC[15]
+	sda-pinmux = <0x0300119c 0x4 0x3>;	// PAD_MIPI_TXM1/IIC2_SDA/XGPIOC[14]
+	/* gpio port */
+	scl-gpios = <&portc 15 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&portc 14 GPIO_ACTIVE_HIGH>;
+};
+
+&i2c3 {
+	/* FMUX_GPIO_REG iic_func_sel gpio_func_sel */
+	scl-pinmux = <0x03001014 0x0 0x3>;	// IIC3_SCL/IIC3_SCL/XGPIOA[5]
+	sda-pinmux = <0x03001018 0x0 0x3>;	// IIC3_SDA/IIC3_SDA/XGPIOA[6]
+	/* gpio port */
+	scl-gpios = <&porta 5 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&porta 6 GPIO_ACTIVE_HIGH>;
+};
+
+&i2c4 {
+	/* FMUX_GPIO_REG iic_func_sel gpio_func_sel */
+	scl-pinmux = <0x030010f0 0x2 0x3>;	// ADC3/IIC4_SCL/XGPIOB[1]
+	sda-pinmux = <0x030010f4 0x2 0x3>;	// ADC2/IIC4_SDA/XGPIOB[2]
+	/* gpio port */
+	scl-gpios = <&portb 1 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&portb 2 GPIO_ACTIVE_HIGH>;
+};
+
+/ {
+	/delete-node/ wifi-sd@4320000;
+	/delete-node/ i2s@04110000;
+	/delete-node/ i2s@04120000;
+	/delete-node/ sound_ext1;
+	/delete-node/ sound_ext2;
+	/delete-node/ sound_PDM;
+
+	wifi_pin {
+		compatible = "cvitek,wifi-pin";
+		poweron-gpio = <&porte 2 GPIO_ACTIVE_HIGH>;
+		wakeup-gpio = <&porte 6 GPIO_ACTIVE_HIGH>;
+	};
+
+};
diff --git a/arch/riscv/dts/soph_asic_sd.dtsi b/arch/riscv/dts/soph_asic_sd.dtsi
new file mode 100644
index 00000000..5af9620d
--- /dev/null
+++ b/arch/riscv/dts/soph_asic_sd.dtsi
@@ -0,0 +1,4 @@
+/ {
+	/delete-node/ cv-emmc@4300000;
+	/delete-node/ cv-spinf@4060000;
+};
diff --git a/arch/riscv/dts/soph_asic_spinand.dtsi b/arch/riscv/dts/soph_asic_spinand.dtsi
new file mode 100644
index 00000000..2c3c6065
--- /dev/null
+++ b/arch/riscv/dts/soph_asic_spinand.dtsi
@@ -0,0 +1,5 @@
+/ {
+	/delete-node/ cvi-spif@10000000;
+	/delete-node/ cv-emmc@4300000;
+};
+
diff --git a/arch/riscv/dts/soph_asic_spinor.dtsi b/arch/riscv/dts/soph_asic_spinor.dtsi
new file mode 100644
index 00000000..cd125408
--- /dev/null
+++ b/arch/riscv/dts/soph_asic_spinor.dtsi
@@ -0,0 +1,5 @@
+/ {
+	/delete-node/ cv-emmc@4300000;
+	/delete-node/ cv-spinf@4060000;
+};
+
diff --git a/arch/riscv/dts/soph_base.dtsi b/arch/riscv/dts/soph_base.dtsi
new file mode 100644
index 00000000..1dee0700
--- /dev/null
+++ b/arch/riscv/dts/soph_base.dtsi
@@ -0,0 +1,932 @@
+
+/ {
+	compatible = "cvitek,cv181x";
+
+	#size-cells = <0x2>;
+	#address-cells = <0x2>;
+
+	top_misc:top_misc_ctrl@3000000 {
+		compatible = "syscon";
+		reg = <0x0 0x03000000 0x0 0x8000>;
+	};
+
+	clk_rst: clk-reset-controller {
+		#reset-cells = <1>;
+		compatible = "cvitek,clk-reset";
+		reg = <0x0 0x03002000 0x0 0x8>;
+	};
+
+	osc: oscillator {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+		clock-output-names = "osc";
+	};
+
+	clk: clock-controller {
+		compatible = "cvitek,cv181x-clk";
+		reg = <0x0 0x03002000 0x0 0x1000>;
+		clocks = <&osc>;
+		#clock-cells = <1>;
+	};
+
+	rst: reset-controller {
+		#reset-cells = <1>;
+		compatible = "cvitek,reset";
+		reg = <0x0 0x03003000 0x0 0x10>;
+	};
+
+	restart: restart-controller {
+		compatible = "cvitek,restart";
+		reg = <0x0 0x05025000 0x0 0x2000>;
+	};
+
+	tpu {
+		compatible = "cvitek,tpu";
+		reg-names = "tdma", "tiu";
+		reg = <0x0 0x0C100000 0x0 0x1000>,
+			  <0x0 0x0C101000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_TPU>, <&clk CV181X_CLK_TPU_FAB>;
+		clock-names = "clk_tpu_axi", "clk_tpu_fab";
+		resets = <&rst RST_TDMA>, <&rst RST_TPU>, <&rst RST_TPUSYS>;
+		reset-names = "res_tdma", "res_tpu", "res_tpusys";
+	};
+
+	mon {
+		compatible = "cvitek,mon";
+		reg-names = "pcmon", "ddr_ctrl", "ddr_phyd", "ddr_aximon", "ddr_top";
+		reg = <0x0 0x01040000 0x0 0x1000>,
+					<0x0 0x08004000 0x0 0x1000>,
+					<0x0 0x08006000 0x0 0x1000>,
+					<0x0 0x08008000 0x0 0x1000>,
+					<0x0 0x0800A000 0x0 0x1000>;
+	};
+
+	wiegand0 {
+		compatible = "cvitek,wiegand";
+		reg-names = "wiegand";
+		reg = <0x0 0x03030000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_WGN>, <&clk CV181X_CLK_WGN0>;
+		clock-names = "clk_wgn", "clk_wgn1";
+		resets = <&rst RST_WGN0>;
+		reset-names = "res_wgn";
+	};
+
+	wiegand1 {
+		compatible = "cvitek,wiegand";
+		reg-names = "wiegand";
+		reg = <0x0 0x03031000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_WGN>, <&clk CV181X_CLK_WGN1>;
+		clock-names = "clk_wgn", "clk_wgn1";
+		resets = <&rst RST_WGN1>;
+		reset-names = "res_wgn";
+	};
+
+	wiegand2 {
+		compatible = "cvitek,wiegand";
+		reg-names = "wiegand";
+		reg = <0x0 0x03032000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_WGN>, <&clk CV181X_CLK_WGN2>;
+		clock-names = "clk_wgn", "clk_wgn1";
+		resets = <&rst RST_WGN2>;
+		reset-names = "res_wgn";
+	};
+
+	saradc {
+		compatible = "cvitek,saradc";
+		reg-names = "top_domain_saradc", "rtc_domain_saradc";
+		reg = <0x0 0x030F0000 0x0 0x1000>, <0x0 0x0502c000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_SARADC>;
+		clock-names = "clk_saradc";
+		resets = <&rst RST_SARADC>;
+		reset-names = "res_saradc";
+	};
+
+	rtc {
+		compatible = "cvitek,rtc";
+		reg = <0x0 0x05026000 0x0 0x1000>,<0x0 0x05025000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_RTC_25M>;
+		clock-names = "clk_rtc";
+	};
+
+	cvitek-ion {
+		compatible = "cvitek,cvitek-ion";
+
+		heap_carveout@0 {
+			compatible = "cvitek,carveout";
+			memory-region = <&ion_reserved>;
+		};
+	};
+
+	sysdma_remap {
+		compatible = "cvitek,sysdma_remap";
+		reg = <0x0 0x03000154 0x0 0x10>;
+		ch-remap = <CVI_I2S0_RX CVI_I2S2_TX CVI_I2S1_RX CVI_I2S1_TX
+					CVI_SPI_NAND CVI_SPI_NAND CVI_I2S2_RX CVI_I2S3_TX>;
+		int_mux_base = <0x03000298>;
+	};
+
+	dmac: dma@0x4330000 {
+		compatible = "snps,dmac-bm";
+		reg = <0x0 0x04330000 0x0 0x1000>;
+		clock-names = "clk_sdma_axi";
+		clocks = <&clk CV181X_CLK_SDMA_AXI>;
+
+		dma-channels = /bits/ 8 <8>;
+		#dma-cells = <3>;
+		dma-requests = /bits/ 8 <16>;
+		chan_allocation_order = /bits/ 8 <0>;
+		chan_priority = /bits/ 8 <1>;
+		block_size = <1024>;
+		dma-masters = /bits/ 8 <2>;
+		data-width = <4 4>; /* bytes */
+		axi_tr_width = <4>; /* bytes */
+		block-ts = <15>;
+	};
+
+
+	watchdog0: cv-wd@0x3010000 {
+		compatible = "snps,dw-wdt";
+		reg = <0x0 0x03010000 0x0 0x1000>;
+		resets = <&rst RST_WDT>;
+		clocks = <&pclk>;
+	};
+
+	pwm0: pwm@3060000 {
+		compatible = "cvitek,cvi-pwm";
+		reg = <0x0 0x3060000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_PWM>;
+		#pwm-cells = <1>;
+	};
+
+	pwm1: pwm@3061000 {
+		compatible = "cvitek,cvi-pwm";
+		reg = <0x0 0x3061000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_PWM>;
+		#pwm-cells = <2>;
+	};
+
+	pwm2: pwm@3062000 {
+		compatible = "cvitek,cvi-pwm";
+		reg = <0x0 0x3062000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_PWM>;
+		#pwm-cells = <3>;
+	};
+
+	pwm3: pwm@3063000 {
+		compatible = "cvitek,cvi-pwm";
+		reg = <0x0 0x3063000 0x0 0x1000>;
+		clocks = <&clk CV181X_CLK_PWM>;
+		#pwm-cells = <4>;
+	};
+
+	pclk: pclk {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+
+	spinand:cv-spinf@4060000 {
+		compatible = "cvitek,cv1835-spinf";
+		reg = <0x0 0x4060000 0x0 0x1000>;
+		reg-names = "core_mem";
+		bus-width = <4>;
+		dmas = <&dmac 4 1 1
+			&dmac 5 1 1>;
+		dma-names = "rx","tx";
+	};
+
+	spif:cvi-spif@10000000 {
+		compatible = "cvitek,cvi-spif";
+		bus-num = <0>;
+		reg = <0x0 0x10000000 0x0 0x10000000>;
+		reg-names = "spif";
+		sck-div = <3>;
+		sck_mhz = <300>;
+		spi-max-frequency = <75000000>;
+		spiflash {
+			compatible = "jedec,spi-nor";
+			spi-rx-bus-width = <4>;
+			spi-tx-bus-width = <4>;
+		};
+	};
+
+	spi0:spi0@04180000 {
+		compatible = "snps,dw-apb-ssi";
+		reg = <0x0 0x04180000 0x0 0x10000>;
+		clocks = <&clk CV181X_CLK_SPI>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+
+	spi1:spi1@04190000 {
+		compatible = "snps,dw-apb-ssi";
+		reg = <0x0 0x04190000 0x0 0x10000>;
+		clocks = <&clk CV181X_CLK_SPI>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+
+	spi2:spi2@041A0000 {
+		compatible = "snps,dw-apb-ssi";
+		reg = <0x0 0x041A0000 0x0 0x10000>;
+		clocks = <&clk CV181X_CLK_SPI>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+
+	spi3:spi3@041B0000 {
+		compatible = "snps,dw-apb-ssi";
+		reg = <0x0 0x041B0000 0x0 0x10000>;
+		clocks = <&clk CV181X_CLK_SPI>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+#if 0
+		dmas = <&dmac 2 1 1
+			&dmac 3 1 1>;
+		dma-names = "rx", "tx";
+		capability = "txrx";
+#endif
+	};
+
+	uart0: serial@04140000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x0 0x04140000 0x0 0x1000>;
+		clock-frequency = <25000000>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		status = "okay";
+	};
+
+	uart1: serial@04150000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x0 0x04150000 0x0 0x1000>;
+		clock-frequency = <25000000>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		status = "disabled";
+	};
+
+	uart2: serial@04160000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x0 0x04160000 0x0 0x1000>;
+		clock-frequency = <25000000>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		status = "disabled";
+	};
+
+	uart3: serial@04170000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x0 0x04170000 0x0 0x1000>;
+		clock-frequency = <25000000>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		status = "disabled";
+	};
+
+	uart4: serial@041C0000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x0 0x041C0000 0x0 0x1000>;
+		clock-frequency = <25000000>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		status = "disabled";
+	};
+
+	gpio0: gpio@03020000 {
+		compatible = "snps,dw-apb-gpio";
+		reg = <0x0 0x03020000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		porta: gpio-controller@0 {
+			compatible = "snps,dw-apb-gpio-port";
+			bank-name = "porta";
+			gpio-controller;
+			#gpio-cells = <2>;
+			snps,nr-gpios = <32>;
+			reg = <0>;
+		};
+	};
+
+	gpio1: gpio@03021000 {
+		compatible = "snps,dw-apb-gpio";
+		reg = <0x0 0x03021000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		portb: gpio-controller@1 {
+			compatible = "snps,dw-apb-gpio-port";
+			bank-name = "portb";
+			gpio-controller;
+			#gpio-cells = <2>;
+			snps,nr-gpios = <32>;
+			reg = <0>;
+		};
+	};
+
+	gpio2: gpio@03022000 {
+		compatible = "snps,dw-apb-gpio";
+		reg = <0x0 0x03022000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		portc: gpio-controller@2 {
+			compatible = "snps,dw-apb-gpio-port";
+			bank-name = "portc";
+			gpio-controller;
+			#gpio-cells = <2>;
+			snps,nr-gpios = <32>;
+			reg = <0>;
+		};
+	};
+
+	gpio3: gpio@03023000 {
+		compatible = "snps,dw-apb-gpio";
+		reg = <0x0 0x03023000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		portd: gpio-controller@3 {
+			compatible = "snps,dw-apb-gpio-port";
+			bank-name = "portd";
+			gpio-controller;
+			#gpio-cells = <2>;
+			snps,nr-gpios = <32>;
+			reg = <0>;
+		};
+	};
+
+	gpio4: gpio@05021000 {
+		compatible = "snps,dw-apb-gpio";
+		reg = <0x0 0x05021000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		porte: gpio-controller@4 {
+			compatible = "snps,dw-apb-gpio-port";
+			bank-name = "porte";
+			gpio-controller;
+			#gpio-cells = <2>;
+			snps,nr-gpios = <32>;
+			reg = <0>;
+		};
+	};
+
+	i2c0: i2c@04000000 {
+		compatible = "snps,designware-i2c";
+		clocks = <&clk CV181X_CLK_I2C>;
+		reg = <0x0 0x04000000 0x0 0x1000>;
+		clock-frequency = <400000>;
+
+		#size-cells = <0x0>;
+		#address-cells = <0x1>;
+		resets = <&rst RST_I2C0>;
+		reset-names = "i2c0";
+	};
+
+	i2c1: i2c@04010000 {
+		compatible = "snps,designware-i2c";
+		clocks = <&clk CV181X_CLK_I2C>;
+		reg = <0x0 0x04010000 0x0 0x1000>;
+		clock-frequency = <400000>;
+
+		#size-cells = <0x0>;
+		#address-cells = <0x1>;
+		resets = <&rst RST_I2C1>;
+		reset-names = "i2c1";
+	};
+
+	i2c2: i2c@04020000 {
+		compatible = "snps,designware-i2c";
+		clocks = <&clk CV181X_CLK_I2C>;
+		reg = <0x0 0x04020000 0x0 0x1000>;
+		clock-frequency = <100000>;
+		resets = <&rst RST_I2C2>;
+		reset-names = "i2c2";
+	};
+
+	i2c3: i2c@04030000 {
+		compatible = "snps,designware-i2c";
+		clocks = <&clk CV181X_CLK_I2C>;
+		reg = <0x0 0x04030000 0x0 0x1000>;
+		clock-frequency = <400000>;
+		resets = <&rst RST_I2C3>;
+		reset-names = "i2c3";
+	};
+
+	i2c4: i2c@04040000 {
+		compatible = "snps,designware-i2c";
+		clocks = <&clk CV181X_CLK_I2C>;
+		reg = <0x0 0x04040000 0x0 0x1000>;
+		clock-frequency = <400000>;
+		resets = <&rst RST_I2C4>;
+		reset-names = "i2c4";
+	};
+
+	eth_csrclk: eth_csrclk {
+		clock-output-names = "eth_csrclk";
+		clock-frequency = <250000000>;
+		#clock-cells = <0x0>;
+		compatible = "fixed-clock";
+	};
+
+	eth_ptpclk: eth_ptpclk {
+		clock-output-names = "eth_ptpclk";
+		clock-frequency = <50000000>;
+		#clock-cells = <0x0>;
+		compatible = "fixed-clock";
+	};
+
+	stmmac_axi_setup: stmmac-axi-config {
+		snps,wr_osr_lmt = <1>;
+		snps,rd_osr_lmt = <2>;
+		snps,blen = <4 8 16 0 0 0 0>;
+	};
+
+	mtl_rx_setup: rx-queues-config {
+		snps,rx-queues-to-use = <1>;
+		queue0 {};
+	};
+
+	mtl_tx_setup: tx-queues-config {
+		snps,tx-queues-to-use = <1>;
+		queue0 {};
+	};
+
+	ethernet0: ethernet@4070000 {
+		compatible = "cvitek,ethernet";
+		reg = <0x0 0x04070000 0x0 0x10000>;
+		clock-names = "stmmaceth", "ptp_ref";
+		clocks = <&eth_csrclk>, <&eth_ptpclk>;
+		//phy-reset-gpios = <&porta 26 0>;
+
+		tx-fifo-depth = <8192>;
+		rx-fifo-depth = <8192>;
+		/* no hash filter and perfect filter support */
+		snps,multicast-filter-bins = <0>;
+		snps,perfect-filter-entries = <1>;
+
+		snps,txpbl = <8>;
+		snps,rxpbl = <8>;
+		snps,aal;
+
+		snps,axi-config = <&stmmac_axi_setup>;
+		snps,mtl-rx-config = <&mtl_rx_setup>;
+		snps,mtl-tx-config = <&mtl_tx_setup>;
+
+		phy-mode = "rmii";
+	};
+
+	emmc:cv-emmc@4300000 {
+		compatible = "cvitek,cv181x-emmc";
+		reg = <0x0 0x4300000 0x0 0x1000>;
+		reg-names = "core_mem";
+		bus-width = <4>;
+		non-removable;
+		no-sdio;
+		no-sd;
+		src-frequency = <375000000>;
+		min-frequency = <400000>;
+		max-frequency = <200000000>;
+		64_addressing;
+		reset_tx_rx_phy;
+		pll_index = <0x5>;
+		pll_reg = <0x3002064>;
+	};
+
+	sd:cv-sd@4310000 {
+		compatible = "cvitek,cv181x-sd";
+		reg = <0x0 0x4310000 0x0 0x1000>;
+		reg-names = "core_mem";
+		bus-width = <4>;
+		cap-sd-highspeed;
+		cap-mmc-highspeed;
+		sd-uhs-sdr12;
+		sd-uhs-sdr25;
+		sd-uhs-sdr50;
+		sd-uhs-sdr104;
+		no-sdio;
+		no-mmc;
+		/*no-1-8-v;*/
+		src-frequency = <375000000>;
+		min-frequency = <400000>;
+		max-frequency = <200000000>;
+		64_addressing;
+		reset_tx_rx_phy;
+		reset-names = "sdhci";
+		pll_index = <0x6>;
+		pll_reg = <0x3002070>;
+		cvi-cd-gpios = <&porta 13 GPIO_ACTIVE_LOW>;
+	};
+
+	wifisd:wifi-sd@4320000 {
+		compatible = "cvitek,cv181x-sdio";
+		bus-width = <4>;
+		reg = <0x0 0x4320000 0x0 0x1000>;
+		reg_names = "core_mem";
+		src-frequency = <375000000>;
+		min-frequency = <400000>;
+		max-frequency = <50000000>;
+		64_addressing;
+		reset_tx_rx_phy;
+		non-removable;
+		pll_index = <0x7>;
+		pll_reg = <0x300207C>;
+		no-mmc;
+		no-sd;
+		status = "disabled";
+	};
+
+	i2s_mclk: i2s_mclk {
+		clock-output-names = "i2s_mclk";
+		clock-frequency = <24576000>;
+		#clock-cells = <0x0>;
+		compatible = "fixed-clock";
+	};
+
+	i2s_subsys {
+		compatible = "cvitek,i2s_tdm_subsys";
+		reg = <0x0 0x04108000 0x0 0x100>;
+		clocks = <&i2s_mclk>, <&clk CV181X_CLK_A0PLL>,
+			<&clk CV181X_CLK_SDMA_AUD0>, <&clk CV181X_CLK_SDMA_AUD1>,
+			<&clk CV181X_CLK_SDMA_AUD2>, <&clk CV181X_CLK_SDMA_AUD3>;
+		clock-names = "i2sclk", "clk_a0pll",
+			"clk_sdma_aud0", "clk_sdma_aud1",
+			"clk_sdma_aud2", "clk_sdma_aud3";
+		master_base = <0x04110000>; /* I2S1 is master, only useful while using multi I2S IPs work on same IO */
+	};
+
+	i2s0: i2s@04100000 {
+		compatible = "cvitek,cv1835-i2s";
+		reg = <0x0 0x04100000 0x0 0x2000>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+		dev-id = <0>;
+		#sound-dai-cells = <0>;
+		dmas = <&dmac 0 1 1>; /* read channel */
+		dma-names = "rx";
+		capability = "rx"; /* I2S0 connect to internal ADC as RX */
+		mclk_out = "false";
+	};
+
+	i2s1: i2s@04110000 {
+		compatible = "cvitek,cv1835-i2s";
+		reg = <0x0 0x04110000 0x0 0x2000>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+		dev-id = <1>;
+		#sound-dai-cells = <0>;
+		dmas = <&dmac 2 1 1 /* read channel */
+			&dmac 3 1 1>; /* write channel */
+		dma-names = "rx", "tx";
+		capability = "txrx";
+		mclk_out = "false";
+	};
+
+	i2s2: i2s@04120000 {
+		compatible = "cvitek,cv1835-i2s";
+		reg = <0x0 0x04120000 0x0 0x2000>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+		dev-id = <2>;
+		#sound-dai-cells = <0>;
+		dmas = <&dmac 6 1 1 /* read channel */
+			&dmac 1 1 1>; /* write channel */
+		dma-names = "rx", "tx";
+		capability = "txrx";
+		mclk_out = "false";
+
+	};
+
+	i2s3: i2s@04130000 {
+		compatible = "cvitek,cv1835-i2s";
+		reg = <0x0 0x04130000 0x0 0x2000>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+		dev-id = <3>;
+		#sound-dai-cells = <0>;
+		dmas = <&dmac 7 1 1>; /* write channel */
+		dma-names = "tx";
+		capability = "tx"; /* I2S3 connect to internal DAC as TX */
+		mclk_out = "true";
+	};
+
+	adc: adc@0300A100 {
+		compatible = "cvitek,cv182xaadc";
+		reg = <0x0 0x0300A100 0x0 0x100>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+		clk_source = <0x04130000>; /* MCLK source is I2S3 */
+	};
+
+	dac: dac@0300A000 {
+		compatible = "cvitek,cv182xadac";
+		reg = <0x0 0x0300A000 0x0 0x100>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+	};
+
+	pdm: pdm@0x041D0C00 {
+		compatible = "cvitek,cv1835pdm";
+		reg = <0x0 0x041D0C00 0x0 0x100>;
+		clocks = <&i2s_mclk 0>;
+		clock-names = "i2sclk";
+	};
+
+	sound_adc {
+		compatible = "cvitek,cv182xa-adc";
+		cvi,model = "CV182XA";
+		cvi,card_name = "cv182xa_adc";
+	};
+
+	sound_dac {
+		compatible = "cvitek,cv182xa-dac";
+		cvi,model = "CV182XA";
+		cvi,card_name = "cv182xa_dac";
+	};
+
+	sound_PDM {
+		compatible = "cvitek,cv182x-pdm";
+		cvi,model = "CV182X";
+		cvi,card_name = "cv182x_internal_PDM";
+	};
+
+	wifi_pin {
+		compatible = "cvitek,wifi-pin";
+		poweron-gpio = <&porta 18 GPIO_ACTIVE_HIGH>;
+		wakeup-gpio = <&porte 7 GPIO_ACTIVE_HIGH>;
+	};
+
+	bt_pin {
+		compatible = "cvitek,bt-pin";
+		poweron-gpio = <&porte 9 GPIO_ACTIVE_HIGH>;
+	};
+
+	mipi_rx: cif {
+		compatible = "cvitek,cif";
+		reg = <0x0 0x0a0c2000 0x0 0x2000>, <0x0 0x0a0d0000 0x0 0x1000>,
+		      <0x0 0x0a0c4000 0x0 0x2000>, <0x0 0x0a0c6000 0x0 0x2000>,
+		      <0x0 0x03001c30 0x0 0x30>;
+		reg-names = "csi_mac0", "csi_wrap0", "csi_mac1", "csi_mac2", "pad_ctrl";
+		snsr-reset = <&porta 2 GPIO_ACTIVE_LOW>, <&porta 2 GPIO_ACTIVE_LOW>, <&porta 2 GPIO_ACTIVE_LOW>;
+		resets = <&rst RST_CSIPHY0>, <&rst RST_CSIPHY1>,
+			<&rst RST_CSIPHY0RST_APB>, <&rst RST_CSIPHY1RST_APB>;
+		reset-names = "phy0", "phy1", "phy-apb0", "phy-apb1";
+		clocks = <&clk CV181X_CLK_CAM0>, <&clk CV181X_CLK_CAM1>, <&clk CV181X_CLK_SRC_VIP_SYS_2>,
+			 <&clk CV181X_CLK_MIPIMPLL>, <&clk CV181X_CLK_DISPPLL>, <&clk CV181X_CLK_FPLL>;
+		clock-names = "clk_cam0", "clk_cam1", "clk_sys_2",
+			      "clk_mipimpll", "clk_disppll", "clk_fpll";
+	};
+
+	mipi_tx: mipi_tx {
+		compatible = "cvitek,mipi_tx";
+		reset-gpio = <&porte 2 GPIO_ACTIVE_LOW>;
+		pwm-gpio = <&porte 0 GPIO_ACTIVE_HIGH>;
+		power-ct-gpio = <&porte 1 GPIO_ACTIVE_HIGH>;
+		clocks = <&clk CV181X_CLK_DISP_VIP>, <&clk CV181X_CLK_DSI_MAC_VIP>;
+		clock-names = "clk_disp", "clk_dsi";
+	};
+
+	sys {
+		compatible = "cvitek,sys";
+	};
+
+	base {
+		compatible = "cvitek,base";
+		reg = <0x0 0x0a0c8000 0x0 0x20>;
+		reg-names = "vip_sys";
+	};
+
+	vi {
+		compatible = "cvitek,vi";
+		reg = <0x0 0x0a000000 0x0 0x80000>;
+		clocks = <&clk CV181X_CLK_SRC_VIP_SYS_0>, <&clk CV181X_CLK_SRC_VIP_SYS_1>,
+				<&clk CV181X_CLK_SRC_VIP_SYS_2>, <&clk CV181X_CLK_SRC_VIP_SYS_3>,
+				<&clk CV181X_CLK_AXI_VIP>, <&clk CV181X_CLK_CSI_BE_VIP>,
+				<&clk CV181X_CLK_RAW_VIP>, <&clk CV181X_CLK_ISP_TOP_VIP>,
+				<&clk CV181X_CLK_CSI_MAC0_VIP>, <&clk CV181X_CLK_CSI_MAC1_VIP>,
+				<&clk CV181X_CLK_CSI_MAC2_VIP>;
+		clock-names = "clk_sys_0", "clk_sys_1", "clk_sys_2", "clk_sys_3",
+					"clk_axi", "clk_csi_be", "clk_raw", "clk_isp_top",
+					"clk_csi_mac0", "clk_csi_mac1", "clk_csi_mac2";
+		clock-freq-vip-sys1 = <300000000>;
+	};
+
+	vpss {
+		compatible = "cvitek,vpss";
+		reg = <0x0 0x0a080000 0x0 0x10000>, <0x0 0x0a0d1000 0x0 0x100>;
+		reg-names = "sc";
+		clocks = <&clk CV181X_CLK_SRC_VIP_SYS_0>,	<&clk CV181X_CLK_SRC_VIP_SYS_1>,
+			<&clk CV181X_CLK_SRC_VIP_SYS_2>, <&clk CV181X_CLK_IMG_D_VIP>,
+			<&clk CV181X_CLK_IMG_V_VIP>, <&clk CV181X_CLK_SC_TOP_VIP>,
+			<&clk CV181X_CLK_SC_D_VIP>, <&clk CV181X_CLK_SC_V1_VIP>,
+			<&clk CV181X_CLK_SC_V2_VIP>, <&clk CV181X_CLK_SC_V3_VIP>;
+		clock-names = "clk_sys_0", "clk_sys_1",
+			"clk_sys_2", "clk_img_d",
+			"clk_img_v", "clk_sc_top",
+			"clk_sc_d", "clk_sc_v1",
+			"clk_sc_v2", "clk_sc_v3";
+		clock-freq-vip-sys1 = <300000000>;
+	};
+
+	ive {
+		compatible = "cvitek,ive";
+		reg = <0x0 0x0A0A0000 0x0 0x3100>;
+		reg-names = "ive_base";
+	};
+
+	cvi_vo: vo {
+		compatible = "cvitek,vo";
+		reg = <0x0 0x0a080000 0x0 0x10000>, <0x0 0x0a0c8000 0x0 0xa0>, <0x0 0x0a0d1000 0x0 0x100>;
+		reg-names = "sc", "vip_sys", "dphy";
+		clocks = <&clk CV181X_CLK_DISP_VIP>, <&clk CV181X_CLK_DSI_MAC_VIP>, <&clk CV181X_CLK_BT_VIP>;
+		reset-gpio = <&porte 2 GPIO_ACTIVE_LOW>;
+		pwm-gpio = <&porte 0 GPIO_ACTIVE_HIGH>;
+		power-ct-gpio = <&porte 1 GPIO_ACTIVE_HIGH>;
+		clock-names = "clk_disp", "clk_dsi", "clk_bt";
+	};
+
+#if (CVIMMAP_FRAMEBUFFER_SIZE > 0)
+	reserved-memory {
+	  #size-cells = <0x2>;
+	  #address-cells = <0x2>;
+	  ranges;
+
+		fb_reserved: cvifb {
+			alloc-ranges = <0x0 CVIMMAP_FRAMEBUFFER_ADDR 0 CVIMMAP_FRAMEBUFFER_SIZE>;
+			size = <0x0 CVIMMAP_FRAMEBUFFER_SIZE>;
+		};
+	};
+
+	cvi_fb: cvifb {
+		compatible = "cvitek,fb";
+		memory-region = <&fb_reserved>;
+		reg = <0x0 0x0a088000 0x0 0x1000>;
+		reg-names = "disp";
+	};
+#endif
+	dwa {
+		compatible = "cvitek,dwa";
+		reg = <0x0 0x0a0c0000 0x0 0x1000>;
+		reg-names = "dwa";
+		clocks = <&clk CV181X_CLK_SRC_VIP_SYS_0>, <&clk CV181X_CLK_SRC_VIP_SYS_1>,
+			<&clk CV181X_CLK_SRC_VIP_SYS_2>, <&clk CV181X_CLK_SRC_VIP_SYS_3>,
+			<&clk CV181X_CLK_SRC_VIP_SYS_4>, <&clk CV181X_CLK_DWA_VIP>;
+		clock-names = "clk_sys_0", "clk_sys_1",
+			"clk_sys_2", "clk_sys_3",
+			"clk_sys_4", "clk_dwa";
+		clock-freq-vip-sys1 = <300000000>;
+	};
+
+	rgn {
+		compatible = "cvitek,rgn";
+	};
+
+	vcodec {
+		compatible = "cvitek,asic-vcodec";
+		reg = <0x0 0x0B020000 0x0 0x10000>,<0x0 0x0B010000 0x0 0x10000>,<0x0 0x0B030000 0x0 0x100>,
+		      <0x0 0x0B058000 0x0 0x100>,<0x0 0x0B050000 0x0 0x400>;
+		reg-names = "h265","h264","vc_ctrl","vc_sbm","vc_addr_remap";
+		clocks = <&clk CV181X_CLK_AXI_VIDEO_CODEC>,
+			<&clk CV181X_CLK_H264C>, <&clk CV181X_CLK_APB_H264C>,
+			<&clk CV181X_CLK_H265C>, <&clk CV181X_CLK_APB_H265C>,
+			<&clk CV181X_CLK_VC_SRC0>, <&clk CV181X_CLK_VC_SRC1>,
+			<&clk CV181X_CLK_VC_SRC2>, <&clk CV181X_CLK_CFG_REG_VC>;
+		clock-names = "clk_axi_video_codec",
+			"clk_h264c", "clk_apb_h264c",
+			"clk_h265c", "clk_apb_h265c",
+			"clk_vc_src0", "clk_vc_src1",
+			"clk_vc_src2", "clk_cfg_reg_vc";
+	};
+
+	jpu {
+		compatible = "cvitek,asic-jpeg";
+		reg = <0x0 0x0B000000 0x0 0x300>,<0x0 0x0B030000 0x0 0x100>,<0x0 0x0B058000 0x0 0x100>;
+		reg-names = "jpeg","vc_ctrl","vc_sbm";
+		clocks = <&clk CV181X_CLK_AXI_VIDEO_CODEC>,
+			<&clk CV181X_CLK_JPEG>, <&clk CV181X_CLK_APB_JPEG>,
+			<&clk CV181X_CLK_VC_SRC0>, <&clk CV181X_CLK_VC_SRC1>,
+			<&clk CV181X_CLK_VC_SRC2>, <&clk CV181X_CLK_CFG_REG_VC>;
+		clock-names = "clk_axi_video_codec",
+			"clk_jpeg", "clk_apb_jpeg",
+			"clk_vc_src0", "clk_vc_src1",
+			"clk_vc_src2", "clk_cfg_reg_vc";
+		resets = <&rst RST_JPEG>;
+		reset-names = "jpeg";
+	};
+
+	cvi_vc_drv {
+		compatible = "cvitek,cvi_vc_drv";
+		reg = <0x0 0x0B030000 0x0 0x100>,<0x0 0x0B058000 0x0 0x100>,<0x0 0x0B050000 0x0 0x400>;
+		reg-names = "vc_ctrl","vc_sbm","vc_addr_remap";
+	};
+
+	rtos_cmdqu {
+		compatible = "cvitek,rtos_cmdqu";
+		reg = <0x0 0x01900000 0x0 0x1000>;
+		reg-names = "mailbox";
+	};
+
+	usb: usb@04340000 {
+		compatible = "cvitek,cv182x-usb";
+		reg = <0x0 0x04340000 0x0 0x10000>,
+			<0x0 0x03006000 0x0 0x58>;	//USB 2.0 PHY
+		dr_mode = "otg";
+		g-use-dma;
+		g-rx-fifo-size = <536>;
+		g-np-tx-fifo-size = <32>;
+		g-tx-fifo-size = <768 512 512 384 128 128>;
+		clocks = <&clk CV181X_CLK_AXI4_USB>,
+				<&clk CV181X_CLK_APB_USB>,
+				<&clk CV181X_CLK_125M_USB>,
+				<&clk CV181X_CLK_33K_USB>,
+				<&clk CV181X_CLK_12M_USB>;
+		clock-names = "clk_axi", "clk_apb", "clk_125m", "clk_33k", "clk_12m";
+		vbus-gpio = <&portb 6 0>;
+		status = "okay";
+	};
+
+	thermal:thermal@030E0000 {
+		compatible = "cvitek,cv181x-thermal";
+		reg = <0x0 0x030E0000 0x0 0x10000>;
+		clocks = <&clk CV181X_CLK_TEMPSEN>;
+		clock-names = "clk_tempsen";
+		reset-names = "tempsen";
+		#thermal-sensor-cells = <1>;
+	};
+
+	thermal-zones {
+		soc_thermal_0: soc_thermal_0 {
+			polling-delay-passive = <1000>; /* milliseconds */
+			polling-delay = <1000>; /* milliseconds */
+			thermal-sensors = <&thermal 0>;
+
+			trips {
+				soc_thermal_trip_0: soc_thermal_trip_0 {
+					temperature = <100000>; /* millicelsius */
+					hysteresis = <5000>; /* millicelsius */
+					type = "passive";
+				};
+
+				soc_thermal_trip_1: soc_thermal_trip_1 {
+					temperature = <110000>; /* millicelsius */
+					hysteresis = <5000>; /* millicelsius */
+					type = "passive";
+				};
+
+				soc_thermal_crtical_0: soc_thermal_crtical_0 {
+					temperature = <130000>; /* millicelsius */
+					hysteresis = <0>; /* millicelsius */
+					type = "critical";
+				};
+			};
+		};
+	};
+
+#if 0
+	cvipctrl: pinctrl@3001000 {
+		compatible = "cvitek,pinctrl-cv182x";
+		reg = <0 0x03001000 0 0x1000>;
+	};
+#endif
+
+	cviaudio_core {
+		compatible = "cvitek,audio";
+	};
+
+	audio_clock: audio_clock {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+#if 0
+		clock-frequency = <12288000>;
+#else
+		clock-frequency = <24576000>;
+#endif
+		};
+
+
+	aliases {
+		i2c0 = &i2c0;
+		i2c1 = &i2c1;
+		i2c2 = &i2c2;
+		i2c3 = &i2c3;
+		i2c4 = &i2c4;
+		//spi0 = &spi0;
+		//spi1 = &spi1;
+		//spi2 = &spi2;
+		//spi3 = &spi3;
+		serial0 = &uart0;
+		serial1 = &uart1;
+		serial2 = &uart2;
+		serial3 = &uart3;
+		serial4 = &uart4;
+		ethernet0 = &ethernet0;
+	};
+
+	chosen {
+		stdout-path = "serial0";
+	};
+};
+
diff --git a/arch/riscv/dts/soph_base_arm.dtsi b/arch/riscv/dts/soph_base_arm.dtsi
new file mode 100644
index 00000000..f811def7
--- /dev/null
+++ b/arch/riscv/dts/soph_base_arm.dtsi
@@ -0,0 +1,320 @@
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/reset/cv181x-resets.h>
+#include <dt-bindings/clock/cv181x-clock.h>
+#include <dt-bindings/thermal/thermal.h>
+#include <dt-bindings/dma/cv181x-dmamap.h>
+#include "cvi_board_memmap.h"
+
+/memreserve/	CVIMMAP_MONITOR_ADDR CVIMMAP_ATF_SIZE; // ATF (BL31 + BL32) 512KB
+
+#include "soph_base.dtsi"
+
+/ {
+	model = "SOPHGO ASIC. ARM.";
+	interrupt-parent = <&gic>;
+
+	#size-cells = <0x2>;
+	#address-cells = <0x2>;
+
+	gic: interrupt-controller {
+		compatible = "arm,cortex-a15-gic";
+		ranges;
+		#size-cells = <0x2>;
+		#address-cells = <0x2>;
+		interrupt-controller;
+		#interrupt-cells = <0x3>;
+		reg = <0x0 0x01F01000 0x0 0x1000>,
+		      <0x0 0x01F02000 0x0 0x2000>;
+	};
+
+	pmu_a53 {
+		compatible = "arm,cortex-a53-pmu";
+		interrupts = <GIC_SPI 119 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 120 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-affinity = <&A53_0>;
+	};
+
+	psci {
+		migrate = <0xc4000005>;
+		cpu_on = <0xc4000003>;
+		cpu_off = <0x84000002>;
+		cpu_suspend = <0xc4000001>;
+		sys_poweroff = <0x84000008>;
+		sys_reset = <0x84000009>;
+		method = "smc";
+		compatible = "arm,psci-0.2", "arm,psci";
+	};
+
+	cpus {
+		#size-cells = <0x0>;
+		#address-cells = <0x1>;
+
+		A53_0: cpu@0 {
+			reg = <0x0>;
+			enable-method = "psci";
+			compatible = "arm,cortex-a53";
+			device_type = "cpu";
+			next-level-cache = <&CA53_L2>;
+		};
+
+		CA53_L2: l2-cache0 {
+			compatible = "cache";
+		};
+	};
+
+	timer {
+		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>;
+		always-on;
+		clock-frequency = <25000000>;
+		compatible = "arm,armv8-timer";
+	};
+
+	firmware {
+		optee {
+			compatible = "linaro,optee-tz";
+			method = "smc";
+		};
+	};
+
+	cooling:cooling {
+		clocks = <&clk CV181X_CLK_A53>, <&clk CV181X_CLK_TPU>;
+		clock-names = "clk_cpu", "clk_tpu_axi";
+		dev-freqs = <800000000 500000000>,
+			<400000000 375000000>,
+			<400000000 300000000>;
+		compatible = "sophgo,cooling";
+		#cooling-cells = <2>;
+	};
+
+	tpu {
+		interrupts = <GIC_SPI 59 IRQ_TYPE_EDGE_RISING>,
+			     <GIC_SPI 60 IRQ_TYPE_EDGE_RISING>;
+	};
+
+	mon {
+		interrupts = <GIC_SPI 77 IRQ_TYPE_EDGE_RISING>;
+	};
+
+	wiegand0 {
+		interrupts = <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	wiegand1 {
+		interrupts = <GIC_SPI 49 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	wiegand2 {
+		interrupts = <GIC_SPI 50 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	saradc {
+		interrupts = <GIC_SPI 84 IRQ_TYPE_EDGE_RISING>;
+	};
+
+	rtc {
+		interrupts = <GIC_SPI 1 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	sysdma_remap {
+		int_mux = <0x1FF>; /* enable bit [0..8] for CPU0(CA53) */
+	};
+
+	dmac: dma@0x4330000 {
+		interrupts = <GIC_SPI 13 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+#if 0
+	watchdog0: cv-wd@0x3010000 {
+		interrupts = <GIC_SPI 42 IRQ_TYPE_LEVEL_HIGH>;
+	};
+#endif
+
+	spinand:cv-spinf@4060000 {
+		interrupts = <GIC_SPI 23 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	spif:cvi-spif@10000000 {
+		interrupts = <GIC_SPI 79 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	spi0:spi0@04180000 {
+		interrupts = <GIC_SPI 38 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	spi1:spi1@04190000 {
+		interrupts = <GIC_SPI 39 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	spi2:spi2@041A0000 {
+		interrupts = <GIC_SPI 40 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	spi3:spi3@041B0000 {
+		interrupts = <GIC_SPI 41 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	uart0: serial@04140000 {
+		interrupts = <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	uart1: serial@04150000 {
+		interrupts = <GIC_SPI 29 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	uart2: serial@04160000 {
+		interrupts = <GIC_SPI 30 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	uart3: serial@04170000 {
+		interrupts = <GIC_SPI 31 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	uart4: serial@041C0000 {
+		interrupts = <GIC_SPI 32 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	gpio0: gpio@03020000 {
+		porta: gpio-controller@0 {
+			interrupt-controller;
+			interrupts = <GIC_SPI 44 IRQ_TYPE_LEVEL_HIGH>;
+		};
+	};
+
+	gpio1: gpio@03021000 {
+		portb: gpio-controller@1 {
+			interrupt-controller;
+			interrupts = <GIC_SPI 45 IRQ_TYPE_LEVEL_HIGH>;
+		};
+	};
+
+	gpio2: gpio@03022000 {
+		portc: gpio-controller@2 {
+			interrupt-controller;
+			interrupts = <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>;
+		};
+	};
+
+	gpio3: gpio@03023000 {
+		portd: gpio-controller@3 {
+			interrupt-controller;
+			interrupts = <GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>;
+		};
+	};
+
+	gpio4: gpio@05021000 {
+		porte: gpio-controller@4 {
+			interrupt-controller;
+			interrupts = <GIC_SPI 54 IRQ_TYPE_LEVEL_HIGH>;
+		};
+	};
+
+	i2c0: i2c@04000000 {
+		interrupts = <GIC_SPI 33 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2c1: i2c@04010000 {
+		interrupts = <GIC_SPI 34 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2c2: i2c@04020000 {
+		interrupts = <GIC_SPI 35 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2c3: i2c@04030000 {
+		interrupts = <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2c4: i2c@04040000 {
+		interrupts = <GIC_SPI 37 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	ethernet0: ethernet@4070000 {
+		interrupt-names = "macirq";
+		interrupts = <GIC_SPI 15 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	emmc:cv-emmc@4300000 {
+		interrupts = <GIC_SPI 18 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	sd:cv-sd@4310000 {
+		interrupts = <GIC_SPI 20 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2s0: i2s@04100000 {
+		interrupts = <GIC_SPI 24 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2s1: i2s@04110000 {
+		interrupts = <GIC_SPI 25 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2s2: i2s@04120000 {
+		interrupts = <GIC_SPI 26 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	i2s3: i2s@04130000 {
+		interrupts = <GIC_SPI 27 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	wifisd:wifi-sd@4320000 {
+		interrupts = <GIC_SPI 22 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	mipi_rx: cif {
+		interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 11 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "csi0", "csi1";
+	};
+
+	vi {
+		interrupts = <GIC_SPI 8 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "isp";
+	};
+
+	ive {
+		interrupt-names = "ive_irq";
+		interrupts = <GIC_SPI 81 IRQ_TYPE_EDGE_RISING>;
+	};
+
+	vpss {
+		interrupts = <GIC_SPI 9 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "sc";
+	};
+
+	dwa {
+		interrupts = <GIC_SPI 12 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "dwa";
+	};
+
+	vcodec {
+		interrupts = <GIC_SPI 6 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 5 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 7 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "h265","h264","sbm";
+	};
+
+	jpu {
+		interrupts = <GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "jpeg";
+	};
+
+	rtos_cmdqu {
+		interrupts = <GIC_SPI 85 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "mailbox";
+	};
+
+	usb: usb@04340000 {
+		interrupts = <GIC_SPI 14 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	thermal:thermal@030E0000 {
+		interrupts = <GIC_SPI 0 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "tempsen";
+	};
+
+};
diff --git a/arch/riscv/dts/soph_base_riscv.dtsi b/arch/riscv/dts/soph_base_riscv.dtsi
new file mode 100644
index 00000000..62472821
--- /dev/null
+++ b/arch/riscv/dts/soph_base_riscv.dtsi
@@ -0,0 +1,372 @@
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/reset/cv181x-resets.h>
+#include <dt-bindings/clock/cv181x-clock.h>
+#include <dt-bindings/thermal/thermal.h>
+#include <dt-bindings/dma/cv181x-dmamap.h>
+#include "sg2002_memmap.h"
+
+/*
+ * OpenSBI will add below subnode into reserved memory automatically
+ * mmode_resv0@80000000 {
+ *     reg = <0x00 0x80000000 0x00 0x20000>;
+ *     phandle = <0x0d>;
+ * };
+ * Skip below to avoid lmb region reseved conflict in uboot.
+ *
+ */
+#ifndef __UBOOT__
+/memreserve/	CVIMMAP_MONITOR_ADDR CVIMMAP_OPENSBI_SIZE; // OpenSBI
+#endif
+
+#include "soph_base.dtsi"
+
+/ {
+	model = "SOPHGO ASIC. C906.";
+
+	#size-cells = <0x2>;
+	#address-cells = <0x2>;
+
+	cpus {
+		#address-cells = <0x01>;
+		#size-cells = <0x00>;
+		timebase-frequency = <25000000>;
+
+		cpu-map {
+
+			cluster0 {
+
+				core0 {
+					cpu = <0x01>;
+				};
+			};
+		};
+
+		cpu@0 {
+			device_type = "cpu";
+			reg = <0x00>;
+			status = "okay";
+			compatible = "riscv";
+			riscv,isa = "rv64imafdvcsu";
+			mmu-type = "riscv,sv39";
+			clock-frequency = <25000000>;
+
+			cpu0_intc: interrupt-controller {
+				#interrupt-cells = <0x01>;
+				interrupt-controller;
+				compatible = "riscv,cpu-intc";
+			};
+		};
+	};
+
+	soc {
+		#address-cells = <0x02>;
+		#size-cells = <0x02>;
+		compatible = "simple-bus";
+		ranges;
+
+		plic0: interrupt-controller@70000000 {
+			riscv,ndev = <101>;
+			riscv,max-priority = <0x07>;
+			reg-names = "control";
+			reg = <0x00 0x70000000 0x00 0x4000000>;
+			interrupts-extended = <&cpu0_intc 0xffffffff &cpu0_intc 0x09>;
+			interrupt-controller;
+			compatible = "riscv,plic0";
+			#interrupt-cells = <0x02>;
+			#address-cells = <0x00>;
+		};
+
+		clint@74000000 {
+			interrupts-extended = <&cpu0_intc 0x03 &cpu0_intc 0x07>;
+			reg = <0x00 0x74000000 0x00 0x10000>;
+			compatible = "riscv,clint0";
+			clint,has-no-64bit-mmio;
+		};
+
+	};
+
+	cooling:cooling {
+		clocks = <&clk CV181X_CLK_C906_0>, <&clk CV181X_CLK_TPU>;
+		clock-names = "clk_cpu", "clk_tpu_axi";
+		dev-freqs = <850000000 500000000>,
+			<425000000 375000000>,
+			<425000000 300000000>;
+		compatible = "sophgo,cooling";
+		#cooling-cells = <2>;
+	};
+
+	tpu {
+		interrupts = <75 IRQ_TYPE_LEVEL_HIGH>,
+				<76 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "tiu_irq", "tdma_irq";
+		interrupt-parent = <&plic0>;
+	};
+
+	mon {
+		interrupts = <93 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "mon_irq";
+		interrupt-parent = <&plic0>;
+	};
+
+	wiegand0 {
+		interrupts = <64 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	wiegand1 {
+		interrupts = <65 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	wiegand2 {
+		interrupts = <66 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	saradc {
+		interrupts = <100 IRQ_TYPE_EDGE_RISING>;
+		interrupt-parent = <&plic0>;
+	};
+
+	rtc {
+		interrupts = <17 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	sysdma_remap {
+		int_mux = <0x7FC00>; /* enable bit [10..18] for CPU1(906B) */
+	};
+
+	dmac: dma@0x4330000 {
+		interrupts = <29 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	watchdog0: cv-wd@0x3010000 {
+		interrupts = <58 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	spinand:cv-spinf@4060000 {
+		interrupts = <39 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	spif:cvi-spif@10000000 {
+		interrupts = <95 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	spi0:spi0@04180000 {
+		interrupts = <54 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	spi1:spi1@04190000 {
+		interrupts = <55 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	spi2:spi2@041A0000 {
+		interrupts = <56 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	spi3:spi3@041B0000 {
+		interrupts = <57 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	uart0: serial@04140000 {
+		interrupts = <44 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	uart1: serial@04150000 {
+		interrupts = <45 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	uart2: serial@04160000 {
+		interrupts = <46 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	uart3: serial@04170000 {
+		interrupts = <47 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	uart4: serial@041C0000 {
+		interrupts = <48 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	gpio0: gpio@03020000 {
+		porta: gpio-controller@0 {
+			interrupt-controller;
+			interrupts = <60 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-parent = <&plic0>;
+		};
+	};
+
+	gpio1: gpio@03021000 {
+		portb: gpio-controller@1 {
+			interrupt-controller;
+			interrupts = <61 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-parent = <&plic0>;
+		};
+	};
+
+	gpio2: gpio@03022000 {
+		portc: gpio-controller@2 {
+			interrupt-controller;
+			interrupts = <62 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-parent = <&plic0>;
+		};
+	};
+
+	gpio3: gpio@03023000 {
+		portd: gpio-controller@3 {
+			interrupt-controller;
+			interrupts = <63 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-parent = <&plic0>;
+		};
+	};
+
+	gpio4: gpio@05021000 {
+		porte: gpio-controller@4 {
+			interrupt-controller;
+			interrupts = <70 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-parent = <&plic0>;
+		};
+	};
+
+	i2c0: i2c@04000000 {
+		interrupts = <49 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2c1: i2c@04010000 {
+		interrupts = <50 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2c2: i2c@04020000 {
+		interrupts = <51 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2c3: i2c@04030000 {
+		interrupts = <52 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2c4: i2c@04040000 {
+		interrupts = <53 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	ethernet0: ethernet@4070000 {
+		interrupt-names = "macirq";
+		interrupts = <31 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	emmc:cv-emmc@4300000 {
+		interrupts = <34 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	sd:cv-sd@4310000 {
+		interrupts = <36 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2s0: i2s@04100000 {
+		interrupts = <40 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2s1: i2s@04110000 {
+		interrupts = <41 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2s2: i2s@04120000 {
+		interrupts = <42 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	i2s3: i2s@04130000 {
+		interrupts = <43 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	vi {
+		interrupts = <24 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+		interrupt-names = "isp";
+	};
+
+	vcodec {
+		interrupts = <22 IRQ_TYPE_LEVEL_HIGH>,
+			     <21 IRQ_TYPE_LEVEL_HIGH>,
+			     <23 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "h265","h264","sbm";
+		interrupt-parent = <&plic0>;
+	};
+
+	jpu {
+		interrupts = <20 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "jpeg";
+		interrupt-parent = <&plic0>;
+	};
+
+	rtos_cmdqu {
+		interrupts = <101 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "mailbox";
+		interrupt-parent = <&plic0>;
+	};
+
+	wifisd:wifi-sd@4320000 {
+		interrupts = <38 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	mipi_rx: cif {
+		interrupts = <26 IRQ_TYPE_LEVEL_HIGH>,
+			     <27 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "csi0", "csi1";
+		interrupt-parent = <&plic0>;
+	};
+
+	ive {
+		interrupt-names = "ive_irq";
+		interrupt-parent = <&plic0>;
+		interrupts = <97 IRQ_TYPE_LEVEL_HIGH>;
+	};
+
+	vpss {
+		interrupts = <25 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "sc";
+		interrupt-parent = <&plic0>;
+	};
+
+	dwa {
+		interrupts = <28 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "dwa";
+		interrupt-parent = <&plic0>;
+	};
+
+	usb: usb@04340000 {
+		interrupts = <30 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-parent = <&plic0>;
+	};
+
+	thermal:thermal@030E0000 {
+		interrupts = <16 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "tempsen";
+	};
+
+};
diff --git a/arch/riscv/dts/soph_default_memmap.dtsi b/arch/riscv/dts/soph_default_memmap.dtsi
new file mode 100644
index 00000000..bb362511
--- /dev/null
+++ b/arch/riscv/dts/soph_default_memmap.dtsi
@@ -0,0 +1,25 @@
+/ {
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x00 CVIMMAP_KERNEL_MEMORY_ADDR 0x00 CVIMMAP_KERNEL_MEMORY_SIZE>;
+	};
+
+
+	fast_image {
+		compatible = "cvitek,rtos_image";
+		reg-names = "rtos_region";
+		reg = <0x0 CVIMMAP_FREERTOS_ADDR 0x0 CVIMMAP_FREERTOS_SIZE>;
+		ion-size = <CVIMMAP_FREERTOS_RESERVED_ION_SIZE>;	//reserved ion size for freertos
+	};
+
+	reserved-memory {
+		#size-cells = <0x2>;
+		#address-cells = <0x2>;
+		ranges;
+
+		ion_reserved: ion {
+			compatible = "ion-region";
+			size = <0x0 CVIMMAP_ION_SIZE>;
+		};
+	};
+};
diff --git a/board/cvitek/licheervnano_board_init.c b/board/cvitek/licheervnano_board_init.c
new file mode 100644
index 00000000..4c890da0
--- /dev/null
+++ b/board/cvitek/licheervnano_board_init.c
@@ -0,0 +1,136 @@
+__attribute__((optimize("O0")))
+// 1.26ms
+void suck_loop(uint64_t loop) {
+        loop = loop * 50 * 100;
+        uint64_t a;
+        while (loop > 0) {
+                a = loop / (uint64_t)99;
+                a = loop / (uint64_t)77;
+                a = loop / (uint64_t)55;
+                a = loop / (uint64_t)33;
+                a = loop / (uint64_t)11;
+                a = loop / (uint64_t)999;
+                a = loop / (uint64_t)777;
+                a = loop / (uint64_t)555;
+                a = loop / (uint64_t)333;
+                a = loop / (uint64_t)111;
+                a = loop / (uint64_t)9999;
+                a = loop / (uint64_t)7777;
+                a = loop / (uint64_t)5555;
+                a = loop / (uint64_t)3333;
+                a = loop / (uint64_t)1111;
+                a = loop / (uint64_t)99999;
+                a = loop / (uint64_t)77777;
+                a = loop / (uint64_t)55555;
+                a = loop / (uint64_t)33333;
+                a = loop / (uint64_t)11111;
+                loop--;
+        }
+}
+
+static inline void user_led_on(void) {
+	uint32_t val;
+
+        val = mmio_read_32(0x03020000);
+        val |= (1 << 14);
+        mmio_write_32(0x03020000, val);
+}
+
+static inline void user_led_off(void) {
+	uint32_t val;
+
+        val = mmio_read_32(0x03020000);
+        val &= ~(1 << 14);
+        mmio_write_32(0x03020000, val);
+}
+
+static inline void user_led_toggle(void) {
+	uint32_t val;
+
+        val = mmio_read_32(0x03020000);
+        val ^= (1 << 14);
+        mmio_write_32(0x03020000, val);
+}
+
+int cvi_board_init(void)
+{
+        uint32_t val;
+
+	// user led
+	mmio_write_32(0x03001038, 0x3); // GPIOA 14 GPIO_MODE
+	val = mmio_read_32(0x03020004); // GPIOA DIR
+        val |= (1 << 14); // output
+        mmio_write_32(0x03020004, val);
+	user_led_toggle();
+
+        // wifi power reset
+        mmio_write_32(0x0300104C, 0x3); // GPIOA 26
+        val = mmio_read_32(0x03020004); // GPIOA DIR
+        val |= (1 << 26); // output
+        mmio_write_32(0x03020004, val);
+
+        val = mmio_read_32(0x03020000); // signal level
+        val &= ~(1 << 26); // set level to low
+        mmio_write_32(0x03020000, val);
+
+        suck_loop(200);
+	user_led_toggle();
+
+        val = mmio_read_32(0x03020000); // signal level
+        val |= (1 << 26); // set level to high
+        mmio_write_32(0x03020000, val);
+
+        // wifi sdio pinmux
+        mmio_write_32(0x030010D0, 0x0); // D3
+        mmio_write_32(0x030010D4, 0x0); // D2
+        mmio_write_32(0x030010D8, 0x0); // D1
+        mmio_write_32(0x030010DC, 0x0); // D0
+        mmio_write_32(0x030010E0, 0x0); // CMD
+        mmio_write_32(0x030010E4, 0x0); // CLK
+
+        // uart bluetooth
+        mmio_write_32(0x03001070, 0x1); // GPIOA 28 UART1 TX
+        mmio_write_32(0x03001074, 0x1); // GPIOA 29 UART1 RX
+        mmio_write_32(0x03001068, 0x4); // GPIOA 18 UART1 CTS
+        mmio_write_32(0x03001064, 0x4); // GPIOA 19 UART1 RTS
+
+        // PWM
+        //mmio_write_32(0x03001068, 0x2); // GPIOA 18 PWM 6
+
+        // lcd reset
+        mmio_write_32(0x030010A4, 0x0); // PWRGPIO 0 GPIO_MODE
+
+	user_led_toggle();
+        // lcd backlight
+        //mmio_write_32(0x030010EC, 0x0); // GPIOB 0 PWM0_BUCK
+	// for licheervnano alpha
+	val = mmio_read_32(0x03021000); // signal level
+        val |= (1 << 0); // set level to high
+        mmio_write_32(0x03021000, val);
+        val = mmio_read_32(0x03021004); // GPIOB DIR
+        val |= (1 << 0); // output
+        mmio_write_32(0x03021004, val);
+        mmio_write_32(0x030010EC, 0x3); // GPIOB 0 GPIO_MODE
+
+	// for licheervnano beta
+	mmio_write_32(0x030010ac, 0x4); // PWRGPIO 2 PWM 10
+
+        // camera function
+        mmio_write_32(0x0300116C, 0x5); // RX4N CAM_MCLK0
+
+        // camera/tp i2c
+        mmio_write_32(0x03001090, 0x5); // PWR_GPIO6 IIC4_SCL
+        mmio_write_32(0x03001098, 0x5); // PWR_GPIO8 IIC4_SDA
+
+        // tp function
+        mmio_write_32(0x03001084, 0x3); // PWR_SEQ1 PWR_GPIO[3]
+        mmio_write_32(0x03001088, 0x3); // PWR_SEQ2 PWR_GPIO[4]
+        mmio_write_32(0x05027078, 0x11);// Unlock PWR_GPIO[3]
+        mmio_write_32(0x0502707c, 0x11);// Unlock PWR_GPIO[4]
+
+        // wait hardware bootup
+        suck_loop(100);
+	user_led_off();
+        return 0;
+}
+
diff --git a/board/cvitek/mars/Kconfig b/board/cvitek/mars/Kconfig
index 0ca29023..ac2dd2d1 100644
--- a/board/cvitek/mars/Kconfig
+++ b/board/cvitek/mars/Kconfig
@@ -51,6 +51,14 @@ config CVITEK_SPI_FLASH
 	select CMD_SF
     select CVI_SPIF
 
+config CVITEK_SG2002_MEMMAP
+	bool
+	prompt "use sg2002 memmap"
+
+config LICHEERVNANO_BOARD_INIT
+	bool
+	prompt "licheervnano board init"
+
 config ENV_SIZE
     default 0x10000 if ENV_IS_IN_SPI_FLASH
     default 0x20000 if ENV_IS_IN_MMC
diff --git a/board/cvitek/mars/board.c b/board/cvitek/mars/board.c
index 9c961ac1..c2d6ff07 100644
--- a/board/cvitek/mars/board.c
+++ b/board/cvitek/mars/board.c
@@ -69,7 +69,7 @@ void pinmux_config(int io_type)
 		break;
 		case PINMUX_SDIO0:
 			PINMUX_CONFIG(SD0_CD, SDIO0_CD);
-			PINMUX_CONFIG(SD0_PWR_EN, SDIO0_PWR_EN);
+			//PINMUX_CONFIG(SD0_PWR_EN, SDIO0_PWR_EN);
 			PINMUX_CONFIG(SD0_CMD, SDIO0_CMD);
 			PINMUX_CONFIG(SD0_CLK, SDIO0_CLK);
 			PINMUX_CONFIG(SD0_D0, SDIO0_D_0);
@@ -152,7 +152,11 @@ void pinmux_config(int io_type)
 	}
 }
 
+#ifdef CONFIG_LICHEERVNANO_BOARD_INIT
+#include "../licheervnano_board_init.c"
+#else
 #include "../cvi_board_init.c"
+#endif
 
 #if defined(CONFIG_PHY_CVITEK) /* config cvitek cv181x eth internal phy on ASIC board */
 static void cv181x_ephy_id_init(void)
diff --git a/cmd/Makefile b/cmd/Makefile
index 697b3824..c4df550d 100644
--- a/cmd/Makefile
+++ b/cmd/Makefile
@@ -68,7 +68,7 @@ obj-$(CONFIG_CMD_FAT) += fat.o
 obj-$(CONFIG_CMD_FDT) += fdt.o
 obj-$(CONFIG_CMD_SQUASHFS) += sqfs.o
 obj-$(CONFIG_CMD_FLASH) += flash.o
-obj-$(CONFIG_CMD_CVI_JPEG) += cvi_jpeg.o
+#obj-$(CONFIG_CMD_CVI_JPEG) += cvi_jpeg.o
 obj-$(CONFIG_CMD_CVI_VO) += cvi_vo.o
 obj-$(CONFIG_CMD_CVI_UPDATE) += cvi_update.o
 obj-$(CONFIG_CMD_CVI_UPDATE) += cvi_utask.o
diff --git a/cmd/cvi_vo.c b/cmd/cvi_vo.c
index 41124a87..652c499e 100644
--- a/cmd/cvi_vo.c
+++ b/cmd/cvi_vo.c
@@ -52,6 +52,9 @@ int i80_init(int devno, const struct _VO_I80_INSTR_S *cmds, int size)
 static int dsi_init(int devno, const struct dsc_instr *cmds, int size)
 {
 	int ret;
+	if (cmds == NULL) {
+		return 0;
+	}
 
 	for (int i = 0; i < size; i++) {
 		const struct dsc_instr *instr = &cmds[i];
@@ -155,7 +158,7 @@ static void dsi_panel_init(void)
 	u8 zero = panel_desc.hs_timing_cfg->zero;
 	u8 trail = panel_desc.hs_timing_cfg->trail;
 
-	debug("Init panel %s\n", panel_desc.panel_name);
+	printf("Init panel %s\n", panel_desc.panel_name);
 	mipi_tx_set_combo_dev_cfg(panel_desc.dev_cfg);
 	dsi_init(0, panel_desc.dsi_init_cmds, panel_desc.dsi_init_cmds_size);
 	dphy_set_hs_settle(prepare, zero, trail);
diff --git a/common/autoboot.c b/common/autoboot.c
index 1af23c1b..661a38de 100644
--- a/common/autoboot.c
+++ b/common/autoboot.c
@@ -435,6 +435,10 @@ static void process_fdt_options(const void *blob)
 #endif /* CONFIG_SYS_TEXT_BASE */
 }
 
+#ifdef CONFIG_BOOTCOMMAND
+char licheervnano_bootcmd[] = CONFIG_BOOTCOMMAND;
+#endif
+
 const char *bootdelay_process(void)
 {
 	char *s;
@@ -465,6 +469,10 @@ const char *bootdelay_process(void)
 	else
 		s = env_get("bootcmd");
 
+	if (s == NULL) {
+		s = licheervnano_bootcmd;
+	}
+
 	if (IS_ENABLED(CONFIG_OF_CONTROL))
 		process_fdt_options(gd->fdt_blob);
 	stored_bootdelay = bootdelay;
diff --git a/configs/licheervnano_defconfig b/configs/licheervnano_defconfig
new file mode 100644
index 00000000..ddf83a57
--- /dev/null
+++ b/configs/licheervnano_defconfig
@@ -0,0 +1,70 @@
+CONFIG_RISCV=y
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_IDENT_STRING=" soph"
+CONFIG_ARCH_RV64I=y
+CONFIG_RISCV_SMODE=y
+CONFIG_TARGET_CVITEK_CV181X=y
+CONFIG_DISTRO_DEFAULTS=y
+CONFIG_FIT=y
+# CONFIG_ARCH_FIXUP_FDT_MEMORY is not set
+CONFIG_BOOTDELAY=1
+CONFIG_SYS_PROMPT="soph# "
+# CONFIG_CMD_CONSOLE is not set
+# CONFIG_CMD_XIMG is not set
+# CONFIG_CMD_EDITENV is not set
+# CONFIG_CMD_CRC32 is not set
+# CONFIG_CMD_LZMADEC is not set
+# CONFIG_CMD_UNLZ4 is not set
+# CONFIG_CMD_UNZIP is not set
+# CONFIG_CMD_LOADS is not set
+CONFIG_CMD_MMC=y
+# CONFIG_CMD_ITEST is not set
+CONFIG_CMD_CACHE=y
+# CONFIG_CMD_CVI_SD_UPDATE is not set
+# CONFIG_ISO_PARTITION is not set
+# CONFIG_EFI_PARTITION is not set
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_MMC=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_SDMA=y
+CONFIG_MMC_SDHCI_CVITEK=y
+CONFIG_MTD=y
+# CONFIG_PHY_SMSC is not set
+CONFIG_DM_ETH=y
+CONFIG_ETH_DESIGNWARE=y
+CONFIG_PHY_CVITEK=y
+CONFIG_SYS_NS16550=y
+CONFIG_SPI=y
+CONFIG_LZ4=y
+CONFIG_LZMA=y
+# CONFIG_TOOLS_LIBCRYPTO is not set
+CONFIG_ENV_IS_NOWHERE=y
+
+CONFIG_DEFAULT_DEVICE_TREE="licheervnano"
+CONFIG_CVITEK_SG2002_MEMMAP=y
+# CONFIG_CMD_CVI_UPDATE is not set
+CONFIG_LICHEERVNANO_BOARD_INIT=y
+CONFIG_USE_BOOTCOMMAND=y
+CONFIG_BOOTCOMMAND="startvo 0 8192 0; mmc dev 0; mmc info; fatload mmc 0:1 0x81800000 boot.sd; setenv bootargs console=ttyS0,115200 earlycon=sbi riscv.fwsz=0x80000 loglevel=9 root=/dev/mmcblk0p2; bootm 0x81800000#config-licheervnano"
+CONFIG_ENV_IMPORT_FDT=y
+CONFIG_UDP_FUNCTION_FASTBOOT=y
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_BUF_ADDR=0x81800000
+CONFIG_FASTBOOT_BUF_SIZE=0x1000000
+CONFIG_FASTBOOT_FLASH_MMC_DEV=0
+CONFIG_DISPLAY=y
+CONFIG_DM_VIDEO=y
+CONFIG_DM_GPIO=y
+CONFIG_DWAPB_GPIO=y
+CONFIG_CMD_VIDCONSOLE=y
+CONFIG_VIDEO_BPP16=y
+CONFIG_VIDEO_BPP32=y
+CONFIG_VIDEO_CVITEK=y
+CONFIG_DISPLAY_CVITEK_MIPI=y
+CONFIG_BMP_16BPP=y
+CONFIG_BMP_24BPP=y
+CONFIG_BMP_32BPP=y
+CONFIG_BOOTLOGO=y
+CONFIG_CMD_CVI_VO=y
+CONFIG_CMD_GPIO=y
diff --git a/drivers/Makefile b/drivers/Makefile
index 3cc03cbc..c20bd979 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -32,7 +32,7 @@ obj-$(CONFIG_$(SPL_TPL_)TPM) += tpm/
 obj-$(CONFIG_$(SPL_TPL_)ACPI_PMC) += power/acpi_pmc/
 obj-$(CONFIG_XEN) += xen/
 obj-$(CONFIG_$(SPL_)FPGA) += fpga/
-obj-$(CONFIG_CMD_CVI_JPEG) += jpeg/
+#obj-$(CONFIG_CMD_CVI_JPEG) += jpeg/
 
 ifndef CONFIG_TPL_BUILD
 ifdef CONFIG_SPL_BUILD
diff --git a/drivers/mmc/cvitek/sdhci-mars.c b/drivers/mmc/cvitek/sdhci-mars.c
index faecfec8..b0dd95fc 100644
--- a/drivers/mmc/cvitek/sdhci-mars.c
+++ b/drivers/mmc/cvitek/sdhci-mars.c
@@ -155,7 +155,7 @@ static void cvi_sdio0_pad_function(bool bunplug)
 	u8 val = (bunplug) ? 0x3 : 0x0;
 
 	mmio_write_32(PAD_SDIO0_CD_REG, 0x0);
-	mmio_write_32(PAD_SDIO0_PWR_EN_REG, 0x0);
+	//mmio_write_32(PAD_SDIO0_PWR_EN_REG, 0x0);
 	mmio_write_32(PAD_SDIO0_CLK_REG, val);
 	mmio_write_32(PAD_SDIO0_CMD_REG, val);
 	mmio_write_32(PAD_SDIO0_D0_REG, val);
diff --git a/drivers/video/cvitek/cvi_disp.c b/drivers/video/cvitek/cvi_disp.c
index 23ce46b1..0e6db8a1 100644
--- a/drivers/video/cvitek/cvi_disp.c
+++ b/drivers/video/cvitek/cvi_disp.c
@@ -106,6 +106,7 @@ static int cvi_vo_probe(struct udevice *dev)
 
 	video_set_flush_dcache(dev, 1);
 
+	printf("cvitek vo probe over\n");
 	return ret;
 }
 
diff --git a/drivers/video/cvitek/cvi_mipi.c b/drivers/video/cvitek/cvi_mipi.c
index 3a045735..bb8b67f9 100644
--- a/drivers/video/cvitek/cvi_mipi.c
+++ b/drivers/video/cvitek/cvi_mipi.c
@@ -152,33 +152,33 @@ int mipi_tx_set_combo_dev_cfg(const struct combo_dev_cfg_s *dev_cfg)
 				ctrl_gpios.disp_power_ct_gpio.flags & GPIOD_ACTIVE_LOW ? 0 : 1);
 	if (ret < 0) {
 		printf("dm_gpio_set_value(disp_power_ct_gpio, deassert) failed: %d", ret);
-		return ret;
+		//return ret;
 	}
 	ret = dm_gpio_set_value(&ctrl_gpios.disp_pwm_gpio,
 				ctrl_gpios.disp_pwm_gpio.flags & GPIOD_ACTIVE_LOW ? 0 : 1);
 	if (ret < 0) {
 		printf("dm_gpio_set_value(disp_pwm_gpio, deassert) failed: %d", ret);
-		return ret;
+		//return ret;
 	}
 	ret = dm_gpio_set_value(&ctrl_gpios.disp_reset_gpio,
 				ctrl_gpios.disp_reset_gpio.flags & GPIOD_ACTIVE_LOW ? 0 : 1);
 	if (ret < 0) {
 		printf("dm_gpio_set_value(disp_reset_gpio, deassert) failed: %d", ret);
-		return ret;
+		//return ret;
 	}
 	mdelay(10);
 	ret = dm_gpio_set_value(&ctrl_gpios.disp_reset_gpio,
 				ctrl_gpios.disp_reset_gpio.flags & GPIOD_ACTIVE_LOW ? 1 : 0);
 	if (ret < 0) {
 		printf("dm_gpio_set_value(disp_reset_gpio, deassert) failed: %d", ret);
-		return ret;
+		//return ret;
 	}
 	mdelay(10);
 	ret = dm_gpio_set_value(&ctrl_gpios.disp_reset_gpio,
 				ctrl_gpios.disp_reset_gpio.flags & GPIOD_ACTIVE_LOW ? 0 : 1);
 	if (ret < 0) {
 		printf("dm_gpio_set_value(disp_reset_gpio, deassert) failed: %d", ret);
-		return ret;
+		//return ret;
 	}
 	mdelay(100);
 
diff --git a/dts/Makefile b/dts/Makefile
index b4f917d7..16be79f2 100644
--- a/dts/Makefile
+++ b/dts/Makefile
@@ -13,8 +13,8 @@ endif
 ifneq ($(EXT_DTB),)
 DTB := $(EXT_DTB)
 else
-#DTB := arch/$(ARCH)/dts/$(DEVICE_TREE).dtb
-DTB := arch/$(ARCH)/dts/$(CHIP)_$(CVIBOARD).dtb
+DTB := arch/$(ARCH)/dts/$(DEVICE_TREE).dtb
+#DTB := arch/$(ARCH)/dts/$(CHIP)_$(CVIBOARD).dtb
 endif
 
 $(obj)/dt-$(SPL_NAME).dtb: dts/dt.dtb $(objtree)/tools/fdtgrep FORCE
diff --git a/include/configs/mars-asic.h b/include/configs/mars-asic.h
index 12cdefac..15fd5c75 100644
--- a/include/configs/mars-asic.h
+++ b/include/configs/mars-asic.h
@@ -20,14 +20,17 @@
 #undef CONFIG_ENV_SECT_SIZE
 
 /* cvi_board_memmap.h is generated from build/boards/{CHIP_ARCH}/{BOARD}/memmap.py */
-#include "cvi_board_memmap.h"
+//#include "cvi_board_memmap.h"
+#ifdef CONFIG_CVITEK_SG2002_MEMMAP
+#include "sg2002_memmap.h"
+#endif
 /* partition definitions header which is created by mkcvipart.py */
 /* please do not modify header manually */
 #include "cvipart.h"
 #include "cvi_panels/cvi_panel_diffs.h"
 
 // defined in this .h
-#undef CONFIG_BOOTCOMMAND
+//#undef CONFIG_BOOTCOMMAND
 
 #if defined(__aarch64__)
 #define CONFIG_ARMV8_SWITCH_TO_EL1
@@ -274,7 +277,9 @@
 
 	/* BOOTLOGO */
 	#ifdef CONFIG_BOOTLOGO
+		/*
 		#define SHOWLOGOCMD "run showlogo;"
+		*/
 
 		#ifdef CONFIG_NAND_SUPPORT
 			#define LOAD_LOGO "nand read " LOGO_READ_ADDR " MISC;"
@@ -311,9 +316,9 @@
 	#ifdef CONFIG_ENABLE_ALIOS_UPDATE
 		#define CONFIG_BOOTCOMMAND	"cvi_update_rtos"
 	#elif CONFIG_SD_BOOT
-		#define CONFIG_BOOTCOMMAND	SHOWLOGOCMD "run sdboot || run sdbootauto"
+		//#define CONFIG_BOOTCOMMAND	SHOWLOGOCMD "run sdboot || run sdbootauto"
 	#else
-		#define CONFIG_BOOTCOMMAND	SHOWLOGOCMD "cvi_update || run norboot || run nandboot ||run emmcboot"
+		//#define CONFIG_BOOTCOMMAND	SHOWLOGOCMD "cvi_update || run norboot || run nandboot ||run emmcboot"
 	#endif
 
 	#if defined(CONFIG_NAND_SUPPORT)
@@ -341,7 +346,7 @@
 
 #else
 	/* define your environment */
-	#define CONFIG_BOOTCOMMAND ""
+	//#define CONFIG_BOOTCOMMAND ""
 
 #endif /* CONFIG_USE_DEFAULT_ENV */
 
diff --git a/include/cvipart.h b/include/cvipart.h
new file mode 100644
index 00000000..ba45dce3
--- /dev/null
+++ b/include/cvipart.h
@@ -0,0 +1,14 @@
+#ifndef CVIPART_H
+#define CVIPART_H
+
+#ifndef CONFIG_ENV_IS_NOWHERE
+#define CONFIG_ENV_IS_NOWHERE
+#endif
+
+#define CONFIG_ENV_SIZE 0x20000
+#define PART_LAYOUT ""
+#define ROOTFS_DEV "/dev/mmcblk0p2"
+#define PARTS_OFFSET ""
+#define SPL_BOOT_PART_OFFSET 0x0
+
+#endif
diff --git a/include/cvitek/cvi_panels/cvi_panels.h b/include/cvitek/cvi_panels/cvi_panels.h
index d74bcd8c..99c11416 100644
--- a/include/cvitek/cvi_panels/cvi_panels.h
+++ b/include/cvitek/cvi_panels/cvi_panels.h
@@ -24,6 +24,7 @@ struct panel_desc_s {
 	struct cvi_lvds_cfg_s *lvds_cfg;
 };
 
+
 #ifdef MIPI_PANEL_HX8394
 #include "dsi_hx8394_evb.h"
 static struct panel_desc_s panel_desc = {
@@ -114,6 +115,15 @@ static struct panel_desc_s panel_desc = {
 	.dsi_init_cmds = dsi_init_cmds_st7701_480x800,
 	.dsi_init_cmds_size = ARRAY_SIZE(dsi_init_cmds_st7701_480x800)
 };
+#elif defined(MIPI_PANEL_ST7701_HD228001C31)
+#include "dsi_st7701_hd228001c31.h"
+static struct panel_desc_s panel_desc = {
+	.panel_name = "ST7701-368x552",
+	.dev_cfg = &dev_cfg_st7701_368x552,
+	.hs_timing_cfg = &hs_timing_cfg_st7701_368x552,
+	.dsi_init_cmds = dsi_init_cmds_st7701_368x552,
+	.dsi_init_cmds_size = ARRAY_SIZE(dsi_init_cmds_st7701_368x552)
+};
 #elif defined(MIPI_PANEL_ST7785M)
 #include "dsi_st7785m.h"
 static struct panel_desc_s panel_desc = {
@@ -130,19 +140,37 @@ static struct panel_desc_s panel_desc = {
 	.i80_init_cmds = i80_st7789v_init_cmds,
 	.i80_init_cmds_size = ARRAY_SIZE(i80_st7789v_init_cmds)
 };
+#elif defined(MIPI_PANEL_ZCT2133V1)
+#include "dsi_zct2133v1.h"
+static struct panel_desc_s panel_desc = {
+        .panel_name = "zct2133v1-800x1280",
+        .dev_cfg = &dev_cfg_zct2133v1_800x1280,
+        .hs_timing_cfg = &hs_timing_cfg_zct2133v1_800x1280,
+        .dsi_init_cmds = dsi_init_cmds_zct2133v1_800x1280,
+        .dsi_init_cmds_size = ARRAY_SIZE(dsi_init_cmds_zct2133v1_800x1280)
+};
+#elif defined(MIPI_PANEL_DUMMY)
+#include "dsi_dummy.h"
+static struct panel_desc_s panel_desc = {
+        .panel_name = "dummy-1920x1080",
+        .dev_cfg = &dev_cfg_dummy_1920x1080,
+        .hs_timing_cfg = &hs_timing_cfg_dummy_1920x1080,
+        .dsi_init_cmds = NULL,
+        .dsi_init_cmds_size = 0,
+};
 #elif defined(LVDS_PANEL_EK79202)
 #include "lvds_ek79202.h"
 static struct panel_desc_s panel_desc = {
 	.lvds_cfg = &lvds_ek79202_cfg
 };
 #else
-#include "dsi_hx8394_evb.h"
+#include "dsi_dummy.h"
 static struct panel_desc_s panel_desc = {
-	.panel_name = "HX8394-720x1280",
-	.dev_cfg = &dev_cfg_hx8394_720x1280,
-	.hs_timing_cfg = &hs_timing_cfg_hx8394_720x1280,
-	.dsi_init_cmds = dsi_init_cmds_hx8394_720x1280,
-	.dsi_init_cmds_size = ARRAY_SIZE(dsi_init_cmds_hx8394_720x1280)
+        .panel_name = "dummy-1920x1080",
+        .dev_cfg = &dev_cfg_dummy_1920x1080,
+        .hs_timing_cfg = &hs_timing_cfg_dummy_1920x1080,
+        .dsi_init_cmds = NULL,
+        .dsi_init_cmds_size = 0,
 };
 #endif
 
diff --git a/include/cvitek/cvi_panels/dsi_dummy.h b/include/cvitek/cvi_panels/dsi_dummy.h
new file mode 100644
index 00000000..0c43a31b
--- /dev/null
+++ b/include/cvitek/cvi_panels/dsi_dummy.h
@@ -0,0 +1,50 @@
+#ifndef _MIPI_TX_PARAM_DUMMY_H_
+#define _MIPI_TX_PARAM_DUMMY_H_
+
+#ifndef __UBOOT__
+#include <linux/vo_mipi_tx.h>
+#include <linux/cvi_comm_mipi_tx.h>
+#else
+#include <cvi_mipi.h>
+#endif
+
+#define DUMMY_VACT  1080
+#define DUMMY_VSA   5
+#define DUMMY_VBP   23
+#define DUMMY_VFP   3
+
+#define DUMMY_HACT  1920
+#define DUMMY_HSA   32
+#define DUMMY_HBP   80
+#define DUMMY_HFP   48
+
+#define DUMMY_PIXEL_CLK(x) ((x##_VACT + x##_VSA + x##_VBP + x##_VFP) \
+        * (x##_HACT + x##_HSA + x##_HBP + x##_HFP) * 60 / 1000)
+
+struct combo_dev_cfg_s dev_cfg_dummy_1920x1080 = {
+        .devno = 0,
+        .lane_id = {MIPI_TX_LANE_0, MIPI_TX_LANE_CLK, MIPI_TX_LANE_1, -1, -1},
+        .lane_pn_swap = {false, false, false, false, false},
+        .output_mode = OUTPUT_MODE_DSI_VIDEO,
+        .video_mode = BURST_MODE,
+        .output_format = OUT_FORMAT_RGB_24_BIT,
+        .sync_info = {
+                .vid_hsa_pixels = DUMMY_HSA,
+                .vid_hbp_pixels = DUMMY_HBP,
+                .vid_hfp_pixels = DUMMY_HFP,
+                .vid_hline_pixels = DUMMY_HACT,
+                .vid_vsa_lines = DUMMY_VSA,
+                .vid_vbp_lines = DUMMY_VBP,
+                .vid_vfp_lines = DUMMY_VFP,
+                .vid_active_lines = DUMMY_VACT,
+                .vid_vsa_pos_polarity = false,
+                .vid_hsa_pos_polarity = true,
+        },
+        .pixel_clk = DUMMY_PIXEL_CLK(DUMMY),
+};
+
+const struct hs_settle_s hs_timing_cfg_dummy_1920x1080 = { .prepare = 6, .zero = 32, .trail = 1 };
+
+#else
+#error "MIPI_TX_PARAM multi-delcaration!!"
+#endif // _MIPI_TX_PARAM_DUMMY_H_
diff --git a/include/cvitek/cvi_panels/dsi_st7701_hd228001c31.h b/include/cvitek/cvi_panels/dsi_st7701_hd228001c31.h
new file mode 100644
index 00000000..cd70353d
--- /dev/null
+++ b/include/cvitek/cvi_panels/dsi_st7701_hd228001c31.h
@@ -0,0 +1,185 @@
+#ifndef _MIPI_TX_PARAM_ST_7701_HD228001C31_H_
+#define _MIPI_TX_PARAM_ST_7701_HD228001C31_H_
+
+#ifndef __UBOOT__
+#include <linux/vo_mipi_tx.h>
+#include <linux/cvi_comm_mipi_tx.h>
+#else
+#include <cvi_mipi.h>
+#endif
+
+// vendor
+/*
+#define ST7701_HD228001C31_VACT	552
+#define ST7701_HD228001C31_VSA		2
+#define ST7701_HD228001C31_VBP		20
+#define ST7701_HD228001C31_VFP		20
+
+#define ST7701_HD228001C31_HACT		368
+#define ST7701_HD228001C31_HSA		8
+#define ST7701_HD228001C31_HBP		160
+#define ST7701_HD228001C31_HFP		160
+*/
+
+// calc 2
+#define ST7701_HD228001C31_VACT		552
+#define ST7701_HD228001C31_VSA		10
+#define ST7701_HD228001C31_VBP		20
+#define ST7701_HD228001C31_VFP		20
+
+#define ST7701_HD228001C31_HACT		368
+#define ST7701_HD228001C31_HSA		8
+#define ST7701_HD228001C31_HBP		160
+#define ST7701_HD228001C31_HFP		160
+
+
+
+
+// calc
+/*
+#define ST7701_HD228001C31_VACT	552
+#define ST7701_HD228001C31_VSA	10
+#define ST7701_HD228001C31_VBP	6
+#define ST7701_HD228001C31_VFP	3
+
+#define ST7701_HD228001C31_HACT	368
+#define ST7701_HD228001C31_HSA	32
+#define ST7701_HD228001C31_HBP	80
+#define ST7701_HD228001C31_HFP	48
+*/
+
+#define HD22_PIXEL_CLK(x) ((x##_VACT + x##_VSA + x##_VBP + x##_VFP) \
+	* (x##_HACT + x##_HSA + x##_HBP + x##_HFP) * 75 / 1000)
+
+struct combo_dev_cfg_s dev_cfg_st7701_368x552 = {
+	.devno = 0,
+	.lane_id = {MIPI_TX_LANE_0, MIPI_TX_LANE_CLK, MIPI_TX_LANE_1, -1, -1},
+	.lane_pn_swap = {false, false, false, false, false},
+	.output_mode = OUTPUT_MODE_DSI_VIDEO,
+	.video_mode = BURST_MODE,
+	.output_format = OUT_FORMAT_RGB_24_BIT,
+	.sync_info = {
+		.vid_hsa_pixels = ST7701_HD228001C31_HSA,
+		.vid_hbp_pixels = ST7701_HD228001C31_HBP,
+		.vid_hfp_pixels = ST7701_HD228001C31_HFP,
+		.vid_hline_pixels = ST7701_HD228001C31_HACT,
+		.vid_vsa_lines = ST7701_HD228001C31_VSA,
+		.vid_vbp_lines = ST7701_HD228001C31_VBP,
+		.vid_vfp_lines = ST7701_HD228001C31_VFP,
+		.vid_active_lines = ST7701_HD228001C31_VACT,
+		.vid_vsa_pos_polarity = true,
+		.vid_hsa_pos_polarity = false,
+	},
+	.pixel_clk = HD22_PIXEL_CLK(ST7701_HD228001C31),
+};
+
+const struct hs_settle_s hs_timing_cfg_st7701_368x552 = { .prepare = 6, .zero = 32, .trail = 1 };
+
+#ifndef CVI_U8
+#define CVI_U8 unsigned char
+#endif
+
+static CVI_U8 data_st7701_hd228001c31_1[] = { 0xff, 0x77,0x01,0x00,0x00,0x13 }; // 6
+static CVI_U8 data_st7701_hd228001c31_2[] = { 0xef, 0x08 }; // 2
+static CVI_U8 data_st7701_hd228001c31_3[] = { 0xff, 0x77,0x01,0x00,0x00,0x10 }; // 6
+static CVI_U8 data_st7701_hd228001c31_4[] = { 0xc0, 0x44, 0x00 }; // 3
+static CVI_U8 data_st7701_hd228001c31_5[] = { 0xc1, 0x0b, 0x02 }; // 3
+static CVI_U8 data_st7701_hd228001c31_6[] = { 0xc2, 0x07, 0x1f }; // 3
+static CVI_U8 data_st7701_hd228001c31_7[] = { 0xcc, 0x10 }; // 2
+static CVI_U8 data_st7701_hd228001c31_8[] = { 0xb0, 0x0F,0x1E,0x25,0x0D,0x11,0x06,0x12,0x08,0x08,0x2A,0x05,0x12,0x10,0x2B,0x32,0x1F }; // 17
+static CVI_U8 data_st7701_hd228001c31_9[] = { 0xb1, 0x0F,0x1E,0x25,0x0D,0x11,0x05,0x12,0x08,0x08,0x2B,0x05,0x12,0x10,0x2B,0x32,0x1F }; // 17
+static CVI_U8 data_st7701_hd228001c31_10[] = { 0xff, 0x77,0x01,0x00,0x00,0x11 }; // 6
+static CVI_U8 data_st7701_hd228001c31_11[] = { 0xb0, 0x35 }; // 2
+static CVI_U8 data_st7701_hd228001c31_12[] = { 0xb1, 0x45 }; // 2
+static CVI_U8 data_st7701_hd228001c31_13[] = { 0xb2, 0x87 }; // 2
+static CVI_U8 data_st7701_hd228001c31_14[] = { 0xb3, 0x80 }; // 2
+static CVI_U8 data_st7701_hd228001c31_15[] = { 0xb5, 0x80 }; // 2 
+static CVI_U8 data_st7701_hd228001c31_16[] = { 0xb7, 0x85 }; // 2
+static CVI_U8 data_st7701_hd228001c31_17[] = { 0xb8, 0x11 }; // 2
+static CVI_U8 data_st7701_hd228001c31_18[] = { 0xbb, 0x03 }; // 2
+static CVI_U8 data_st7701_hd228001c31_19[] = { 0xc0, 0x07 }; // 2
+static CVI_U8 data_st7701_hd228001c31_20[] = { 0xc1, 0x78 }; // 2
+static CVI_U8 data_st7701_hd228001c31_21[] = { 0xc2, 0x78 }; // 2
+static CVI_U8 data_st7701_hd228001c31_22[] = { 0xd0, 0x88 }; // 2
+// 23 delay 100 ms
+static CVI_U8 data_st7701_hd228001c31_24[] = { 0xe0, 0x00, 0x00, 0x02}; // 4
+static CVI_U8 data_st7701_hd228001c31_25[] = { 0xe1, 0x03,0x30,0x07,0x30,0x02,0x30,0x06,0x30,0x00,0x44,0x44 }; //12
+static CVI_U8 data_st7701_hd228001c31_26[] = { 0xe2, 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }; //12
+static CVI_U8 data_st7701_hd228001c31_27[] = { 0xe3, 0x00,0x00,0x22,0x00 }; // 5
+static CVI_U8 data_st7701_hd228001c31_28[] = { 0xe4, 0x22, 0x00 }; // 3
+static CVI_U8 data_st7701_hd228001c31_29[] = { 0xe5, 0x0A,0x34,0x30,0xE0,0x08,0x32,0x30,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }; // 17
+static CVI_U8 data_st7701_hd228001c31_30[] = { 0xe6, 0x00, 0x00, 0x22, 0x00 }; // 5
+static CVI_U8 data_st7701_hd228001c31_31[] = { 0xe7, 0x22, 0x00 }; // 3
+static CVI_U8 data_st7701_hd228001c31_32[] = { 0xe8, 0x09,0x33,0x30,0xE0,0x07,0x31,0x30,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }; // 17
+static CVI_U8 data_st7701_hd228001c31_33[] = { 0xeb, 0x00,0x01,0x10,0x10,0x11,0x00,0x00 }; // 8
+static CVI_U8 data_st7701_hd228001c31_34[] = { 0xed, 0xFF,0xFF,0xF0,0x45,0xBA,0x2F,0xFF,0xFF,0xFF,0xFF,0xF2,0xAB,0x54,0x0F,0xFF,0xFF }; // 17
+static CVI_U8 data_st7701_hd228001c31_35[] = { 0xef, 0x08,0x08,0x08,0x45,0x3F,0x54 }; // 7
+static CVI_U8 data_st7701_hd228001c31_36[] = { 0xff, 0x77,0x01,0x00,0x00,0x13 }; // 6
+static CVI_U8 data_st7701_hd228001c31_37[] = { 0xe8, 0x00, 0x0e }; // 3
+static CVI_U8 data_st7701_hd228001c31_38[] = { 0x11 }; // 1
+// 39 delay 120 ms
+static CVI_U8 data_st7701_hd228001c31_40[] = { 0xe8, 0x00, 0x0c }; // 3
+// 41 delay 10 ms
+static CVI_U8 data_st7701_hd228001c31_42[] = { 0xe8, 0x00, 0x00 }; // 3
+static CVI_U8 data_st7701_hd228001c31_43[] = { 0xff, 0x77,0x01,0x00,0x00,0x00 }; // 6
+static CVI_U8 data_st7701_hd228001c31_44[] = { 0x29 }; // 1
+// 45 delay 50 ms
+
+
+// len == 1 , type 0x05
+// len == 2 , type 0x15 or type 23
+// len >= 3 , type 0x29 or type 0x39
+#define TYPE1_DCS_SHORT_WRITE 0x05
+#define TYPE2_DCS_SHORT_WRITE 0x15
+#define TYPE3_DCS_LONG_WRITE 0x39
+#define TYPE3_GENERIC_LONG_WRITE 0x29
+const struct dsc_instr dsi_init_cmds_st7701_368x552[] = {
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 6, .data = data_st7701_hd228001c31_1 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_2 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 6, .data = data_st7701_hd228001c31_3 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_4 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_5 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_6 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_7 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 17, .data = data_st7701_hd228001c31_8 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 17, .data = data_st7701_hd228001c31_9 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 6, .data = data_st7701_hd228001c31_10 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_11 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_12 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_13 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_14 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_15 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_16 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_17 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_18 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_19 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_20 },
+  {.delay = 0, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_21 },
+  {.delay = 100, .data_type = TYPE2_DCS_SHORT_WRITE, .size = 2, .data = data_st7701_hd228001c31_22 },
+  // 23 is delay 100ms
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 4, .data = data_st7701_hd228001c31_24 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 12, .data = data_st7701_hd228001c31_25 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 12, .data = data_st7701_hd228001c31_26 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 5, .data = data_st7701_hd228001c31_27 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_28 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 17, .data = data_st7701_hd228001c31_29 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 5, .data = data_st7701_hd228001c31_30 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_31 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 17, .data = data_st7701_hd228001c31_32 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 8, .data = data_st7701_hd228001c31_33 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 17, .data = data_st7701_hd228001c31_34 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 7, .data = data_st7701_hd228001c31_35 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 6, .data = data_st7701_hd228001c31_36 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_37 },
+  {.delay = 120, .data_type = TYPE1_DCS_SHORT_WRITE, .size = 1, .data = data_st7701_hd228001c31_38 },
+  // 39 is delay 120ms
+  {.delay = 10, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_40 },
+  // 41 is delay 10ms
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 3, .data = data_st7701_hd228001c31_42 },
+  {.delay = 0, .data_type = TYPE3_GENERIC_LONG_WRITE, .size = 6, .data = data_st7701_hd228001c31_43 },
+  {.delay = 50, .data_type = TYPE1_DCS_SHORT_WRITE, .size = 1, .data = data_st7701_hd228001c31_44 },
+};
+
+#else
+#error "MIPI_TX_PARAM multi-delcaration!!"
+#endif // _MIPI_TX_PARAM_ST_7701_HD22801C31_H_
diff --git a/include/cvitek/cvi_panels/dsi_zct2133v1.h b/include/cvitek/cvi_panels/dsi_zct2133v1.h
new file mode 100644
index 00000000..842744ca
--- /dev/null
+++ b/include/cvitek/cvi_panels/dsi_zct2133v1.h
@@ -0,0 +1,155 @@
+#ifndef _MIPI_TX_PARAM_ZCT2133V1_H_
+#define _MIPI_TX_PARAM_ZCT2133V1_H_
+
+#ifndef __UBOOT__
+#include <linux/vo_mipi_tx.h>
+#include <linux/cvi_comm_mipi_tx.h>
+#else
+#include <cvi_mipi.h>
+#endif
+
+#define ZCT2133V1_VACT  1280
+#define ZCT2133V1_VSA   10
+#define ZCT2133V1_VBP   34
+#define ZCT2133V1_VFP   3
+
+#define ZCT2133V1_HACT  800
+#define ZCT2133V1_HSA   80
+#define ZCT2133V1_HBP   136
+#define ZCT2133V1_HFP   56
+
+#define ZCT_PIXEL_CLK(x) ((x##_VACT + x##_VSA + x##_VBP + x##_VFP) \
+        * (x##_HACT + x##_HSA + x##_HBP + x##_HFP) * 60 / 1000)
+
+struct combo_dev_cfg_s dev_cfg_zct2133v1_800x1280 = {
+        .devno = 0,
+        .lane_id = {MIPI_TX_LANE_0, MIPI_TX_LANE_CLK, MIPI_TX_LANE_1, -1, -1},
+        .lane_pn_swap = {false, false, false, false, false},
+        .output_mode = OUTPUT_MODE_DSI_VIDEO,
+        .video_mode = BURST_MODE,
+        .output_format = OUT_FORMAT_RGB_24_BIT,
+        .sync_info = {
+                .vid_hsa_pixels = ZCT2133V1_HSA,
+                .vid_hbp_pixels = ZCT2133V1_HBP,
+                .vid_hfp_pixels = ZCT2133V1_HFP,
+                .vid_hline_pixels = ZCT2133V1_HACT,
+                .vid_vsa_lines = ZCT2133V1_VSA,
+                .vid_vbp_lines = ZCT2133V1_VBP,
+                .vid_vfp_lines = ZCT2133V1_VFP,
+                .vid_active_lines = ZCT2133V1_VACT,
+                .vid_vsa_pos_polarity = true,
+                .vid_hsa_pos_polarity = false,
+        },
+        .pixel_clk = ZCT_PIXEL_CLK(ZCT2133V1),
+};
+
+const struct hs_settle_s hs_timing_cfg_zct2133v1_800x1280 = { .prepare = 6, .zero = 32, .trail = 1 };
+
+#ifndef CVI_U8
+#define CVI_U8 unsigned char
+#endif
+
+static CVI_U8 data_zct2133v1_0[] = { 0xE1, 0x93 };
+static CVI_U8 data_zct2133v1_1[] = { 0xE2, 0x65 };
+static CVI_U8 data_zct2133v1_2[] = { 0xE3, 0xF8 };
+static CVI_U8 data_zct2133v1_3[] = { 0x80, 0x01 };
+static CVI_U8 data_zct2133v1_4[] = { 0x11 };
+static CVI_U8 data_zct2133v1_5[] = { 0x29 };
+
+// len == 1 , type 0x05
+// len == 2 , type 0x15 or type 23
+// len >= 3 , type 0x29 or type 0x39
+#define TYPE1 0x05
+#define TYPE2 0x15
+#define TYPE3 0x29
+
+const struct dsc_instr dsi_init_cmds_zct2133v1_800x1280[] = {
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_0 },
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_1 },
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_2 },
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_3 },
+        {.delay = 0, .data_type = TYPE1, .size = 1, .data = data_zct2133v1_4 },
+        {.delay = 0, .data_type = TYPE1, .size = 1, .data = data_zct2133v1_5 },
+};
+
+#else
+#error "MIPI_TX_PARAM multi-delcaration!!"
+#endif // _MIPI_TX_PARAM_ZCT2133V1_H_
+luhui@luhui-b660mstx:/data/luhui/work/licheervnano-sdk-new/u-boot-2021.10/include/cvitek/cvi_panels$ cat dsi_zct2133v1.h 
+#ifndef _MIPI_TX_PARAM_ZCT2133V1_H_
+#define _MIPI_TX_PARAM_ZCT2133V1_H_
+
+#ifndef __UBOOT__
+#include <linux/vo_mipi_tx.h>
+#include <linux/cvi_comm_mipi_tx.h>
+#else
+#include <cvi_mipi.h>
+#endif
+
+#define ZCT2133V1_VACT  1280
+#define ZCT2133V1_VSA   10
+#define ZCT2133V1_VBP   34
+#define ZCT2133V1_VFP   3
+
+#define ZCT2133V1_HACT  800
+#define ZCT2133V1_HSA   80
+#define ZCT2133V1_HBP   136
+#define ZCT2133V1_HFP   56
+
+#define ZCT_PIXEL_CLK(x) ((x##_VACT + x##_VSA + x##_VBP + x##_VFP) \
+        * (x##_HACT + x##_HSA + x##_HBP + x##_HFP) * 60 / 1000)
+
+struct combo_dev_cfg_s dev_cfg_zct2133v1_800x1280 = {
+        .devno = 0,
+        .lane_id = {MIPI_TX_LANE_0, MIPI_TX_LANE_CLK, MIPI_TX_LANE_1, -1, -1},
+        .lane_pn_swap = {false, false, false, false, false},
+        .output_mode = OUTPUT_MODE_DSI_VIDEO,
+        .video_mode = BURST_MODE,
+        .output_format = OUT_FORMAT_RGB_24_BIT,
+        .sync_info = {
+                .vid_hsa_pixels = ZCT2133V1_HSA,
+                .vid_hbp_pixels = ZCT2133V1_HBP,
+                .vid_hfp_pixels = ZCT2133V1_HFP,
+                .vid_hline_pixels = ZCT2133V1_HACT,
+                .vid_vsa_lines = ZCT2133V1_VSA,
+                .vid_vbp_lines = ZCT2133V1_VBP,
+                .vid_vfp_lines = ZCT2133V1_VFP,
+                .vid_active_lines = ZCT2133V1_VACT,
+                .vid_vsa_pos_polarity = true,
+                .vid_hsa_pos_polarity = false,
+        },
+        .pixel_clk = ZCT_PIXEL_CLK(ZCT2133V1),
+};
+
+const struct hs_settle_s hs_timing_cfg_zct2133v1_800x1280 = { .prepare = 6, .zero = 32, .trail = 1 };
+
+#ifndef CVI_U8
+#define CVI_U8 unsigned char
+#endif
+
+static CVI_U8 data_zct2133v1_0[] = { 0xE1, 0x93 };
+static CVI_U8 data_zct2133v1_1[] = { 0xE2, 0x65 };
+static CVI_U8 data_zct2133v1_2[] = { 0xE3, 0xF8 };
+static CVI_U8 data_zct2133v1_3[] = { 0x80, 0x01 };
+static CVI_U8 data_zct2133v1_4[] = { 0x11 };
+static CVI_U8 data_zct2133v1_5[] = { 0x29 };
+
+// len == 1 , type 0x05
+// len == 2 , type 0x15 or type 23
+// len >= 3 , type 0x29 or type 0x39
+#define TYPE1 0x05
+#define TYPE2 0x15
+#define TYPE3 0x29
+
+const struct dsc_instr dsi_init_cmds_zct2133v1_800x1280[] = {
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_0 },
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_1 },
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_2 },
+        {.delay = 0, .data_type = TYPE2, .size = 2, .data = data_zct2133v1_3 },
+        {.delay = 0, .data_type = TYPE1, .size = 1, .data = data_zct2133v1_4 },
+        {.delay = 0, .data_type = TYPE1, .size = 1, .data = data_zct2133v1_5 },
+};
+
+#else
+#error "MIPI_TX_PARAM multi-delcaration!!"
+#endif // _MIPI_TX_PARAM_ZCT2133V1_H_
diff --git a/include/env_default.h b/include/env_default.h
index 807026bc..8bf54533 100644
--- a/include/env_default.h
+++ b/include/env_default.h
@@ -52,9 +52,11 @@ const uchar default_environment[] = {
 #ifdef	CONFIG_NORBOOTCOMMAND
 	"norboot="	CONFIG_NORBOOTCOMMAND		"\0"
 #endif
+	/*
 #ifdef CONFIG_BOOTLOGO
 	"showlogo="	SHOWLOGOCOMMAND			"\0"
 #endif
+*/
 #if defined(CONFIG_BOOTDELAY)
 	"bootdelay="	__stringify(CONFIG_BOOTDELAY)	"\0"
 #endif
diff --git a/include/sg2002_memmap.h b/include/sg2002_memmap.h
new file mode 100644
index 00000000..146d2137
--- /dev/null
+++ b/include/sg2002_memmap.h
@@ -0,0 +1,37 @@
+#ifndef __SG2002_MEMMAP_H___
+#define __SG2002_MEMMAP_H___
+
+#define CONFIG_SYS_TEXT_BASE 0x80200000  /* offset 2.0MiB */
+#define CVIMMAP_ATF_SIZE 0x80000  /* 512.0KiB */
+#define CVIMMAP_BOOTLOGO_ADDR 0x8ab30000  /* offset 171.1875MiB */
+#define CVIMMAP_BOOTLOGO_SIZE 0x7d0000  /* 7.8125MiB */
+#define CVIMMAP_CONFIG_SYS_INIT_SP_ADDR 0x82800000  /* offset 40.0MiB */
+#define CVIMMAP_CVI_UPDATE_HEADER_ADDR 0x817ffc00  /* offset 23.9990234375MiB */
+#define CVIMMAP_CVI_UPDATE_HEADER_SIZE 0x400  /* 1.0KiB */
+#define CVIMMAP_DRAM_BASE 0x80000000  /* offset 0.0KiB */
+#define CVIMMAP_DRAM_SIZE 0x10000000  /* 256.0MiB */
+#define CVIMMAP_FRAMEBUFFER_ADDR 0x8ab30000  /* offset 171.1875MiB */
+#define CVIMMAP_FRAMEBUFFER_SIZE 0x7d0000  /* 7.8125MiB */
+#define CVIMMAP_FREERTOS_ADDR 0x8fe00000  /* offset 254.0MiB */
+#define CVIMMAP_FREERTOS_RESERVED_ION_SIZE 0x1600000  /* 22.0MiB */
+#define CVIMMAP_FREERTOS_SIZE 0x200000  /* 2.0MiB */
+#define CVIMMAP_FSBL_C906L_START_ADDR 0x8fe00000  /* offset 254.0MiB */
+#define CVIMMAP_FSBL_UNZIP_ADDR 0x81800000  /* offset 24.0MiB */
+#define CVIMMAP_FSBL_UNZIP_SIZE 0x1000000  /* 16.0MiB */
+#define CVIMMAP_H26X_BITSTREAM_ADDR 0x8b300000  /* offset 179.0MiB */
+#define CVIMMAP_H26X_BITSTREAM_SIZE 0x200000  /* 2.0MiB */
+#define CVIMMAP_H26X_ENC_BUFF_ADDR 0x8b500000  /* offset 181.0MiB */
+#define CVIMMAP_H26X_ENC_BUFF_SIZE 0x0  /* 0.0KiB */
+#define CVIMMAP_ION_ADDR 0x8b300000  /* offset 179.0MiB */
+#define CVIMMAP_ION_SIZE 0x4b00000  /* 75.0MiB */
+#define CVIMMAP_ISP_MEM_BASE_ADDR 0x8b500000  /* offset 181.0MiB */
+#define CVIMMAP_ISP_MEM_BASE_SIZE 0x1400000  /* 20.0MiB */
+#define CVIMMAP_KERNEL_MEMORY_ADDR 0x80000000  /* offset 0.0KiB */
+#define CVIMMAP_KERNEL_MEMORY_SIZE 0xfe00000  /* 254.0MiB */
+#define CVIMMAP_MONITOR_ADDR 0x80000000  /* offset 0.0KiB */
+#define CVIMMAP_OPENSBI_FDT_ADDR 0x80080000  /* offset 512.0KiB */
+#define CVIMMAP_OPENSBI_SIZE 0x80000  /* 512.0KiB */
+#define CVIMMAP_UIMAG_ADDR 0x81800000  /* offset 24.0MiB */
+#define CVIMMAP_UIMAG_SIZE 0x1000000  /* 16.0MiB */
+
+#endif /* __SG2002_MEMMAP_H___ */
